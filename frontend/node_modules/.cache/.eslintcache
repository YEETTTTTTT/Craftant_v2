[{"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/index.js":"1","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/App.js":"2","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/Store.js":"3","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/reportWebVitals.js":"4","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/utils.js":"5","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/HomeScreen.js":"6","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/PaymentMethodScreen.js":"7","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ShippingAddressScreen.js":"8","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RegisterScreen.js":"9","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/PlaceOrderScreen.js":"10","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderScreen.js":"11","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/BuyerScreen.js":"12","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderHistorySellerScreen.js":"13","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderHistoryScreen.js":"14","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductScreen.js":"15","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductListingScreen.js":"16","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/CartScreen.js":"17","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/SigninScreen.js":"18","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderListScreen.js":"19","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProfileScreen.js":"20","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestEditScreen.js":"21","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductEditScreen.js":"22","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/SearchScreen.js":"23","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestPostScreen.js":"24","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/DashboardScreen.js":"25","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductRequestScreen.js":"26","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestsPageScreen.js":"27","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/VerificationScreen.js":"28","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestsPageSellerScreen.js":"29","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/SellerScreen.js":"30","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/BuyerRoute.js":"31","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/SellerRoute.js":"32","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/SearchBox.js":"33","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/LoadingBox.js":"34","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/MessageBox.js":"35","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Rating.js":"36","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Product.js":"37","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/ProductSeller.js":"38","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Seller.js":"39","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/CheckoutSteps.js":"40","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Request.js":"41"},{"size":735,"mtime":1658672738295,"results":"42","hashOfConfig":"43"},{"size":10915,"mtime":1658756129034,"results":"44","hashOfConfig":"43"},{"size":2239,"mtime":1658672738291,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":1658672738296,"results":"46","hashOfConfig":"43"},{"size":150,"mtime":1658672738304,"results":"47","hashOfConfig":"43"},{"size":3461,"mtime":1658672738297,"results":"48","hashOfConfig":"43"},{"size":1914,"mtime":1658672738298,"results":"49","hashOfConfig":"43"},{"size":3124,"mtime":1658672738303,"results":"50","hashOfConfig":"43"},{"size":4538,"mtime":1658672738300,"results":"51","hashOfConfig":"43"},{"size":5990,"mtime":1658754833524,"results":"52","hashOfConfig":"43"},{"size":8429,"mtime":1658672738298,"results":"53","hashOfConfig":"43"},{"size":4192,"mtime":1658672738296,"results":"54","hashOfConfig":"43"},{"size":2956,"mtime":1658672738298,"results":"55","hashOfConfig":"43"},{"size":2933,"mtime":1658672738297,"results":"56","hashOfConfig":"43"},{"size":8587,"mtime":1658672738300,"results":"57","hashOfConfig":"43"},{"size":5505,"mtime":1658672738299,"results":"58","hashOfConfig":"43"},{"size":4369,"mtime":1658672738296,"results":"59","hashOfConfig":"43"},{"size":3293,"mtime":1658672738303,"results":"60","hashOfConfig":"43"},{"size":2967,"mtime":1658672738298,"results":"61","hashOfConfig":"43"},{"size":6787,"mtime":1658672738300,"results":"62","hashOfConfig":"43"},{"size":7038,"mtime":1658672738301,"results":"63","hashOfConfig":"43"},{"size":7750,"mtime":1658672738299,"results":"64","hashOfConfig":"43"},{"size":7403,"mtime":1658672738302,"results":"65","hashOfConfig":"43"},{"size":9410,"mtime":1658672738301,"results":"66","hashOfConfig":"43"},{"size":3798,"mtime":1658672738297,"results":"67","hashOfConfig":"43"},{"size":5323,"mtime":1658672738300,"results":"68","hashOfConfig":"43"},{"size":2237,"mtime":1658672738301,"results":"69","hashOfConfig":"43"},{"size":4390,"mtime":1658672738303,"results":"70","hashOfConfig":"43"},{"size":3282,"mtime":1658672738302,"results":"71","hashOfConfig":"43"},{"size":4410,"mtime":1658672738302,"results":"72","hashOfConfig":"43"},{"size":333,"mtime":1658672738292,"results":"73","hashOfConfig":"43"},{"size":334,"mtime":1658672738294,"results":"74","hashOfConfig":"43"},{"size":968,"mtime":1658747164750,"results":"75","hashOfConfig":"43"},{"size":225,"mtime":1658672738292,"results":"76","hashOfConfig":"43"},{"size":166,"mtime":1658672738293,"results":"77","hashOfConfig":"43"},{"size":1459,"mtime":1658672738293,"results":"78","hashOfConfig":"43"},{"size":1637,"mtime":1658740191672,"results":"79","hashOfConfig":"43"},{"size":1853,"mtime":1658672738293,"results":"80","hashOfConfig":"43"},{"size":1011,"mtime":1658672738294,"results":"81","hashOfConfig":"43"},{"size":486,"mtime":1658672738292,"results":"82","hashOfConfig":"43"},{"size":1712,"mtime":1658672738294,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"12h28rz",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"86"},"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/index.js",[],["187","188"],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/App.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/Store.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/reportWebVitals.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/utils.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/HomeScreen.js",["189","190","191","192"],"import { useEffect, useReducer, useState, useContext } from 'react';\nimport axios from 'axios';\nimport logger from 'use-reducer-logger';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Product from '../components/Product';\nimport Seller from '../components/Seller';\nimport Card from 'react-bootstrap/Card';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, users: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst isAvailable = (product) => (product.stock > 0);\nconst isActive = (user) => (user.shop);\n\nfunction HomeScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, products, users }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: '',\n    users: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    const fetchUser = async() => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get('/api/users');\n        dispatch({ type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({ type: 'FETCHUSER_FAIL', payload: err.message});\n      }\n    }\n    fetchData();\n    fetchUser();\n  }, []);\n\n  const isListing = (product) => (product.type === \"listing\");\n\n  return (\n    <div>\n      <Helmet>\n        <title>Craftant</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\">Featured Products</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {products.filter(isAvailable).filter(isListing).map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Product product={product}></Product>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n      <br/>\n      <h1 class=\"della-font-headers\">New Shops</h1>\n      <br/>\n      <div className=\"users\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {users.filter(isActive).map((user) => (\n              <Col key={user.email} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Seller seller={user}></Seller>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default HomeScreen;\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/PaymentMethodScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ShippingAddressScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RegisterScreen.js",["193"],"import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport Axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function RegisterScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [userRole, setUserRole] = useState('');\n\n  const {state, dispatch: ctxDispatch } = useContext(Store);\n  const {userInfo} = state;\n\n  const togglePassword = () => {\n    function show() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'text');\n    }\n\n    function hide() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'password');\n    }\n\n    var pwShown = 0;\n\n    document.getElementById(\"eye\").addEventListener(\"click\", function () {\n        if (pwShown == 0) {\n            pwShown = 1;\n            show();\n        } else {\n            pwShown = 0;\n            hide();\n        }\n    }, false);\n  }\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n    } else {\n      try{\n        const {data} = await Axios.post('/api/users/register', {\n          name,\n          email,\n          password,\n          userRole,\n        });\n        ctxDispatch({type: 'USER_SIGNIN', payload: data})\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        navigate(redirect || '/');\n\n      } catch(err) {\n        toast.error(getError(err));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <h1 className=\"my-3 della-font-headers\">Register</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control required onChange={(e) => setName(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" onClick={() => togglePassword()} />\n          <Form.Control type=\"password\" id=\"pwd\" required onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" ></i>\n          <Form.Control type=\"password\" id=\"pwd\" required onChange={(e) => setConfirmPassword(e.target.value)}/>\n        </Form.Group>\n        <Form.Group controlId=\"userRole\">\n          <div className=\"wrapper\">\n            <input type=\"radio\" name=\"userRole\" id=\"option-1\" value=\"buyer\" onChange={(e) => setUserRole(e.target.value)}/>\n            <input type=\"radio\" name=\"userRole\" id=\"option-2\" value=\"seller\" onChange={(e) => setUserRole(e.target.value)}/>\n            <Form.Label for=\"option-1\" className=\"option option-1\">\n              <div className=\"dot\"></div>\n              <span>Buyer</span>\n            </Form.Label>\n            <Form.Label for=\"option-2\" className=\"option option-2\">\n              <div className=\"dot\"></div>\n              <span>Seller</span>\n            </Form.Label>\n          </div>\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button className=\"register-btn\" type=\"submit\">Register</Button>\n        </div>\n        <div className=\"mb-3\">\n          Already have an account?{' '}\n          <Link to={`/signin?redirect=${redirect}`}>Sign In</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/PlaceOrderScreen.js",["194","195","196","197"],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderScreen.js",["198","199"],"import axios from 'axios';\nimport React, {useReducer, useEffect, useContext} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { toast } from 'react-toastify';\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, order: action.payload, loading: false, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'PAY_REQUEST':\n      return { ...state, loadingPayment: true };\n    case 'PAY_SUCCESS':\n      return { ...state, loadingPayment: false, successPayment: true };\n    case 'PAY_FAIL':\n      return { ...state, loadingPayment: false };\n    case 'PAY_RESET':\n      return { ...state, loadingPayment: false, successPayment: false };\n    case 'DELIVER_REQUEST':\n      return { ...state, loadingDeliver: true };\n    case 'DELIVER_SUCCESS':\n      return { ...state, loadingDeliver: false, successDeliver: true };\n    case 'DELIVER_FAIL':\n      return { ...state, loadingDeliver: false, errorDeliver: action.payload };\n    case 'DELIVER_RESET':\n      return { ...state, loadingDeliver: false, successDeliver: false };\n\n    default:\n      return state;\n  }\n}\n\nexport default function OrderScreen() {\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const params = useParams();\n  const { id: orderId } = params;\n  const navigate = useNavigate();\n\n  const [{loading, error, order, loadingPayment, successPayment, loadingDeliver, successDeliver}, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: '',\n    loadingPayment: false,\n    successPayment: false,\n    loadingDeliver: false,\n    successDeliver: false,\n  });\n\n  useEffect(() => {\n    const fetchOrder = async() => {\n      try{\n        dispatch({type:'FETCH_REQUEST'});\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n          headers: {authorization: `Bearer ${userInfo.token}`},\n        });\n\n        dispatch({type: 'FETCH_SUCCESS', payload: data });\n      } catch(err) {\n        dispatch({type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    }\n    if (!userInfo) {\n      return navigate('/login');\n    }\n    if (!order._id || successPayment || successDeliver || (order._id && order._id !== orderId)) {\n      fetchOrder();\n      if (successPayment) {\n        dispatch({ type: 'PAY_RESET'});\n      }\n      if (successDeliver) {\n        dispatch({ type: 'DELIVER_RESET'});\n      }\n    }\n  }, [order, userInfo, orderId, navigate, successPayment, successDeliver]);\n\n  async function orderPaidHandler() {\n    try {\n      dispatch({ type: 'PAY_REQUEST' });\n      const { data } = await axios.put(`/api/orders/${order._id}/payment`, {}, {\n        headers: { authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: 'PAY_SUCCESS' });\n      toast.success('Payment Successful.');\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({ type: 'PAY_FAIL' });\n    }\n  }\n\n  async function deliverOrderHandler() {\n    try {\n      dispatch({ type: 'DELIVER_REQUEST' });\n      const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, {\n        headers: { authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: 'DELIVER_SUCCESS' });\n      toast.success('Order Delivered.');\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({ type: 'DELIVER_FAIL' });\n    }\n  }\n\n  return  (\n    loading? (\n      <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n      <div>\n        <Helmet>\n          <title>Order {orderId}</title>\n        </Helmet>\n        <h1 className=\"my-3 della-font-headers\">Order #{orderId}</h1>\n        <Row>\n          <Col md={8}>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Shipping</Card.Title>\n                <Card.Text>\n                  <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                  <strong>Address:</strong> {order.shippingAddress.address},\n                  {order.shippingAddress.city}, {order.shippingAddress.postalCode},\n                  {order.shippingAddress.country}\n                </Card.Text>\n                {order.isDelivered ? (\n                  <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                )}\n              </Card.Body>\n            </Card>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Payment</Card.Title>\n                <Card.Text>\n                  <strong>Method:</strong> {order.paymentMethod}\n                </Card.Text>\n                {order.isPaid ? (\n                  <MessageBox variant=\"success\">Paid at {order.paidAt}</MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                )}\n              </Card.Body>\n            </Card>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Items</Card.Title>\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item) => (\n                    <ListGroup.Item key={item._id}>\n                      <Row className=\"align-items-center\">\n                        <Col md={6}>\n                          <img src={item.image} alt={item.name} className=\"img-fluid rounded img-thumbnail\"></img>{' '}\n                          <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                        </Col>\n                        <Col md={3}>\n                          <span>{item.quantity}</span>\n                        </Col>\n                        <Col md={3}>${item.price}</Col>\n\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Order Summary</Card.Title>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>${order.itemsPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>${order.shippingPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Order Total</Col>\n                      <Col>${order.totalPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {userInfo.userRole === 'buyer' && !order.isPaid && (\n                    <ListGroup.Item>\n                      {loadingPayment && <LoadingBox />}\n                      <div className=\"d-grid\">\n                        <Button type=\"button\" variant=\"light\" onClick={orderPaidHandler}>\n                          Make Payment\n                        </Button>\n                      </div>\n                    </ListGroup.Item>\n                  )}\n                  {userInfo.userRole === 'seller' && order.isPaid && !order.isDelivered && (\n                    <ListGroup.Item>\n                      {loadingDeliver && <LoadingBox />}\n                      <div className=\"d-grid\">\n                        <Button type=\"button\" variant=\"light\" onClick={deliverOrderHandler}>\n                          Order Delivered\n                        </Button>\n                      </div>\n                    </ListGroup.Item>\n                  )}\n                </ListGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n\n        </Row>\n      </div>\n    )\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/BuyerScreen.js",["200","201","202","203","204","205","206","207"],"import axios from 'axios';\nimport React, {useReducer, useEffect, useContext, useState} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Request from '../components/Request';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { toast } from 'react-toastify';\nimport Rating from '../components/Rating';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, user: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function BuyerScreen() {\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n\n  const params = useParams();\n  const { id } = params;\n\n  const [{ loading, error, products, user }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: '',\n    user: [],\n  });\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    const fetchUser = async () => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get(\n          `/api/users/buyer/${id}`,\n        );\n        dispatch({type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({type: 'FETCHUSER_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n    fetchData();\n    fetchUser();\n  }, [id]);\n\n  const isUser = (product) => (product.user === user._id);\n  const hasRating = (product) => (product.numReviews > 0);\n  const sumRating = products.filter(isUser).map((product) => product.rating).reduce((a, c) => a+c, 0);\n  const avgRating = sumRating/products.filter(isUser).filter(hasRating).length;\n\n  const sumReviews = products.filter(isUser).map((product) => product.numReviews).reduce((a,c) => a+c, 0);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Profile Page</title>\n      </Helmet>\n      <h1>{user.name}'s Profile Page</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n          <Col lg={3} md={4} sm={12} className=\"me-5\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"mb-3\"><strong>{user.name}</strong></Card.Title>\n                <img src={user.logo} className=\"seller-logo\"/>\n\n                <Card.Text className=\"mt-3\">\n                <strong> About {user.name}: </strong>\n                <br/>\n                  {user.description}\n                </Card.Text>\n                <hr/>\n                <Card.Text>\n                  <Rating numReviews={sumReviews} rating={avgRating}/>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              {products.filter(isUser).map((product) => (\n                <Col key={product._id} sm={12} md={6} lg={4} className=\"mb-3\">\n                  <Request product={product}></Request>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderHistorySellerScreen.js",["208"],"import React, {useContext, useEffect, useReducer } from 'react';\nimport {Helmet} from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { getError } from '../utils';\nimport Button from 'react-bootstrap/Button';\n\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, orders: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function OrderHistoryScreen() {\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n\n  const [{loading, error, orders}, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async() => {\n      dispatch({type: 'FETCH_REQUEST'});\n      try {\n        const {data} = await axios.get(\n          `/api/orders`,\n          {headers: {Authorization: `Bearer ${userInfo.token}`}}\n        );\n        dispatch({type: 'FETCH_SUCCESS', payload: data});\n      } catch(error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error),\n        });\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n\n  const isCompleted = (order) => (order.isPaid && order.isDelivered);\n\n  return (\n    <div className=\"order-history-box\">\n      <Helmet>\n        <title>Order History</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\">Order History</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>BUYER</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.filter(isCompleted).map((order) => (\n              <tr key={order._id}>\n                  <td>#{order._id}</td>\n                  <td>{order.user ? order.user.name : 'DELETED'}</td>\n                  <td>${order.totalPrice.toFixed(2)}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                  <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'}</td>\n                  <td>\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/order/${order._id}`);\n                    }}>Details\n                    </Button>\n                  </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderHistoryScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductListingScreen.js",["209","210","211"],"import React, { useReducer, useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreate: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreate: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreate: false };\n    case 'DELETE_REQUEST':\n      return { ...state, loadingDelete: true, successDelete: false };\n    case 'DELETE_SUCCESS':\n      return { ...state, loadingDelete: false, successDelete: true };\n    case 'DELETE_FAIL':\n      return { ...state, loadingDelete: false, successDelete: false };\n    case 'DELETE_RESET':\n      return { ...state, loadingDelete: false, successDelete: false };\n    default:\n      return state;\n  }\n};\n\nexport default function ProductListScreen() {\n  const [{ loading, error, products, loadingCreate, loadingDelete, successDelete }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  const isShop = (product) => (product.shop === userInfo.shop);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/seller`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {}\n    };\n    if (successDelete) {\n      dispatch({type: 'DELETE_RESET'});\n    } else {\n      fetchData();\n    }\n  }, [userInfo, successDelete]);\n\n  const createHandler = async () => {\n    if (window.confirm(\"Confirm Creation\")) {\n\n      try {\n        dispatch({type: 'CREATE_REQUEST'});\n        const { data } = await axios.post(\n          '/api/products',\n          {},\n          {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        toast.success('Product Listed Successfully!');\n        dispatch({type: 'CREATE_SUCCESS'});\n        navigate(`/seller/product/${data.product._id}`);\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'CREATE_FAIL'});\n      }\n    }\n  }\n\n  const deleteHandler = async (product) => {\n    if (window.confirm(\"Confirm deletion\")) {\n      try {\n        await axios.delete(`/api/products/${product._id}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        toast.success(\"Product deleted\");\n        dispatch({type: 'DELETE_SUCCESS'});\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'DELETE_FAIL'});\n      }\n    }\n  }\n\n  return (\n    <div className=\"order-history-box\">\n    <Row>\n      <Col>\n        <h1>Products</h1>\n      </Col>\n      <Col className=\"col text-end\">\n        <div>\n          <Button type=\"button\" onClick={createHandler}>List Product</Button>\n        </div>\n      </Col>\n    </Row>\n    {loadingCreate && <LoadingBox />}\n    {loadingDelete && <LoadingBox />}\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>CATEGORY</th>\n                <th>PRICE</th>\n                <th>SALES</th>\n                <th>TOTAL REVENUE</th>\n                <th>STOCK LEFT</th>\n                <th>ACTIONS</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.filter(isShop).map((product) => (\n                <tr key={product._id}>\n                  <td>#{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>{product.category}</td>\n                  <td>${product.price}</td>\n                  <td>{product.sales}</td>\n                  <td>${product.revenue}</td>\n                  <td>{product.stock}</td>\n                  <td>\n                    <Button type=\"button\" variant=\"light\" onClick={() => navigate(`/seller/product/${product._id}`)}>\n                      Edit\n                    </Button>\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/product/${product.slug}`);\n                    }}>\n                      Details\n                    </Button>\n                    &nbsp;\n                    <Button type=\"button\" variant=\"light\" onClick={() => deleteHandler(product)}>\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/CartScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/SigninScreen.js",["212","213","214","215","216","217"],"import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport Axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function SigninScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [shop, setShop] = useState('');\n  const [logo, setLogo] = useState('');\n  const [description, setDescription] = useState('');\n  const [handmade, setHandmade] = useState('');\n\n  const {state, dispatch: ctxDispatch } = useContext(Store);\n  const {userInfo} = state;\n\n  const togglePassword = () => {\n    function show() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'text');\n    }\n\n    function hide() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'password');\n    }\n\n    var pwShown = 0;\n\n    document.getElementById(\"eye\").addEventListener(\"click\", function () {\n        if (pwShown == 0) {\n            pwShown = 1;\n            show();\n        } else {\n            pwShown = 0;\n            hide();\n        }\n    }, false);\n  }\n\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    try{\n      const {data} = await Axios.post('/api/users/signin', {\n        email,\n        password,\n        description,\n        shop,\n        name,\n        handmade,\n        logo\n      });\n      ctxDispatch({type: 'USER_SIGNIN', payload: data})\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n\n    } catch(err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-4 della-font-headers text-center\">Welcome Back!<br/>Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" onClick={() => togglePassword()}></i>\n          <Form.Control type=\"password\" id=\"pwd\" required onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign In</Button>\n        </div>\n        <div className=\"mb-3\">\n          New customer?{' '}\n          <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/OrderListScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProfileScreen.js",["218","219","220","221","222","223"],"import React, { useContext, useState, useReducer, useEffect } from 'react';\nimport { Store } from '../Store';\nimport {Helmet} from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n    case 'UPLOAD_REQUEST':\n      return { ...state, loadingUpload: true, errorUpload: '' };\n    case 'UPLOAD_SUCCESS':\n      return { ...state, loadingUpload: false, errorUpload: '' };\n    case 'UPLOAD_FAIL':\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, user: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [shop, setShop] = useState(userInfo.shop);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [logo, setLogo] = useState('');\n  const [description, setDescription] = useState(userInfo.description);\n  const [handmade, setHandmade] = useState('');\n  const [money, setMoney] = useState(userInfo.money);\n\n  const [{ loadingUpdate, loadingUpload, user }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n    user: [],\n  });\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get(\n          '/api/users/profile', {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        dispatch({type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({type: 'FETCHUSER_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n    fetchUser();\n  }, []);\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n    } else {\n      try {\n        const { data } = await axios.put(\n          '/api/users/profile',\n          {\n            name, email, password, shop, description, logo, handmade, money\n          },\n          {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        dispatch({type: 'UPDATE_SUCCESS'});\n        ctxDispatch({type: 'USER_SIGNIN', payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        toast.success('User updated successfully!');\n      } catch(err) {\n        dispatch({type: 'FETCH_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n    try {\n      dispatch({type:'UPLOAD_REQUEST'});\n      const { data } = await axios.post('/api/upload', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({type: 'UPLOAD_SUCCESS'});\n      toast.success('Image Uploaded Successfully');\n      setLogo(data.secure_url);\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({type: 'UPLOAD_FAIL', payload: getError(err)});\n    }\n  }\n\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3 della-font-headers\">User Profile - <strong className=\"della-font-headers\" id=\"user-role-color\">{userInfo.userRole}</strong></h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control value={name} onChange={(e) => setName(e.target.value)} required/>\n        </Form.Group>\n\n        <img\n          className=\"seller-logo\"\n          src={userInfo.logo}\n        ></img>\n        <Form.Group className=\"mb-3\" controlId = \"imageFile\">\n          <Form.Label>Logo</Form.Label>\n          <Form.Control type=\"file\" onChange={uploadFileHandler} />\n          {loadingUpload && <LoadingBox />}\n        </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                onChange={(e) => setDescription(e.target.value)}\n                value= {description}\n              />\n            </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"money\">\n          <Form.Label>Balance</Form.Label>\n          <Form.Control type=\"text\" value={\"$\"+user.money} disabled/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n        </Form.Group>\n\n        {userInfo.userRole === 'seller' && !userInfo.shop ? (\n          <Form.Group className=\"mb-3\" controlId=\"shop\">\n            <Form.Label>Shop Name</Form.Label>\n            <Form.Control value={shop} onChange={(e) => setShop(e.target.value)} required/>\n          </Form.Group>\n        ) : userInfo.userRole === 'seller' && userInfo.shop ? (\n          <Form.Group className=\"mb-3\" controlId=\"shop\">\n            <Form.Label>Shop Name</Form.Label>\n            <Form.Control value={shop} onChange={(e) => setShop(e.target.value)} required disabled/>\n          </Form.Group>\n        ) : (\n          null\n        )}\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" onChange={(e) => setPassword(e.target.value)} required/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)} required/>\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update Details</Button>\n        </div>\n\n      </Form>\n    </div>\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestEditScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductEditScreen.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/SearchScreen.js",["224"],"import React, { useReducer, useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport LinkContainer from 'react-router-bootstrap/LinkContainer';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {Helmet} from 'react-helmet-async';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Product from '../components/Product';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload.products, countProducts: action.payload.countProducts, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst prices = [\n  {\n    name: '$1 to $50',\n    value: '1-50',\n  },\n  {\n    name: '$51 to $100',\n    value: '51-100',\n  },\n  {\n    name: '$101 to $200',\n    value: '101-200',\n  },\n  {\n    name: '$201 to $300',\n    value: '201-300',\n  },\n  {\n    name: '$301 to $1000',\n    value: '301-1000',\n  }\n];\n\nexport const ratings = [\n    {\n      name: '5stars',\n      rating: 5,\n    },\n    {\n      name: '4stars',\n      rating: 4,\n    },\n    {\n      name: '3stars',\n      rating: 3,\n    },\n\n    {\n      name: '2stars',\n      rating: 2,\n    },\n\n    {\n      name: '1star',\n      rating: 1,\n    },\n];\n\n\nexport default function SearchScreen() {\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n  const category = sp.get('category') || 'all';\n  const query = sp.get('query') || 'all';\n  const price = sp.get('price') || 'all';\n  const rating = sp.get('rating') || 'all';\n  const order = sp.get('order') || 'newest';\n\n  const [{ loading, error, products, countProducts}, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/search?query=${query}&category=${category}&price=${price}&rating=${rating}&order=${order}`);\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {\n        dispatch({\n          type: ' FETCH_FAIL',\n          payload: getError(err),\n        });\n      }\n    };\n    fetchData();\n  }, [category, price, error, order, rating, query]);\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/categories`);\n        setCategories(data);\n      } catch (err) {\n        toast.error(getError(err));\n      }\n    };\n    fetchCategories();\n  }, [dispatch]);\n\n  const getFilterUrl = (filter) => {\n    const filterCategory = filter.category || category;\n    const filterQuery = filter.query || query;\n    const filterRating = filter.rating || rating;\n    const filterPrice = filter.price || price;\n    const sortOrder = filter.order || order;\n\n    return `/search?category=${filterCategory}&query=${filterQuery}&price=${filterPrice}&rating=${filterRating}&order=${sortOrder}`;\n  }\n\n\n\n  return (\n    <div>\n      <Helmet>\n        <title>Search Products</title>\n      </Helmet>\n\n      <Row>\n        <Col md={3}>\n          <h3>Category</h3>\n          <div>\n            <ul>\n              <li>\n                <Link className={'all' === category ? 'text-bold' : ''} to={getFilterUrl({category: 'all'})}>\n                  Any\n                </Link>\n              </li>\n              {categories.map((c) => (\n                <li key={c}>\n                  <Link className={c === category ? 'text-bold' : ''} to={getFilterUrl({category: c})}>\n                    {c}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h3>Price</h3>\n            <ul>\n              <li>\n                <Link className={'all' === price ? 'text-bold' : ''} to={getFilterUrl({price: 'all'})}>\n                  Any\n                </Link>\n              </li>\n              {prices.map((p) => (\n                <li key={p.value}>\n                  <Link className={p.value === price ? 'text-bold' : ''} to={getFilterUrl({price: p.value})}>\n                    {p.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h3>Ratings</h3>\n            <ul>\n            <li>\n              <Link\n                to={getFilterUrl({ rating: 'all' })}\n                className={rating === 'all' ? 'text-bold' : ''}\n              > Any\n              </Link>\n            </li>\n              {ratings.map((r) => (\n                <li key={r.name}>\n                  <Link\n                    to={getFilterUrl({ rating: r.rating })}\n                    className={`${r.rating}` === `${rating}` ? 'text-bold' : ''}\n                  >\n                    <Rating caption={' stars'} rating={r.rating}></Rating>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </Col>\n        <Col md={9}>\n          {loading ? (\n            <LoadingBox />\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n            <>\n            <Row className=\"justify-content-between mb-3\">\n              <Col md={6}>\n                <div>\n                  {countProducts === 0 ? 'No' : countProducts} Results\n                  {query !== 'all' && ' : ' + query + ' '}\n                  {category !== 'all' && ' : ' + category + ' '}\n                  {price !== 'all' && ' : Price $' + price + ' '}\n                  {rating !== 'all' && ' : Rating ' + rating + 'stars '}\n                  {query !== 'all' || category !== 'all' || rating !== 'all' || price !== 'all' ? (\n                    <Button variant=\"light\" onClick={() => navigate('/search')}>\n                      <i className=\"fas fa-times-circle\" />\n                    </Button>\n                  ) : null}\n                </div>\n              </Col>\n              <Col className=\"text-end\">\n                Sort by{' '}\n                <select value={order} onChange={(e) => {\n                  navigate(getFilterUrl({order: e.target.value}));\n                }}>\n                <option value=\"newest\">Newest Listings</option>\n                <option value=\"lowest\">Price: Low to High</option>\n                <option value=\"highest\">Price: High to Low</option>\n                <option value=\"ratings\">Ratings: High to Low</option>\n                </select>\n              </Col>\n            </Row>\n            {products.length === 0 && (\n              <MessageBox>No Products Found</MessageBox>\n            )}\n            <Row>\n              {products.map((product) => (\n                <Col sm={6} lg={4} className=\"mb-3\" key={product._id}>\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n            </>\n          )}\n        </Col>\n      </Row>\n    </div>\n\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestPostScreen.js",["225","226","227","228","229","230"],"import axios from 'axios';\nimport { useContext, useEffect, useReducer, useRef, useState } from 'react';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'REFRESH_PRODUCT':\n      return { ...state, product: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreateReview: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreateReview: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreateReview: false };\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, product: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'APPLY_REQUEST':\n      return { ...state, loadingApply: true };\n    case 'APPLY_SUCCESS':\n      return { ...state, loadingApply: false, successApply: true };\n    case 'APPLY_FAIL':\n      return { ...state, loadingApply: false };\n    case 'APPLY_RESET':\n      return { ...state, loadingApply: false, successApply: false };\n    default:\n      return state;\n  }\n};\n\nfunction RequestPostScreen() {\n\n  let reviewsRef = useRef();\n  const navigate = useNavigate();\n  const params = useParams();\n  const { id } = params;\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const [{ loading, error, product, loadingApply, successApply, loadingCreateReview }, dispatch] = useReducer(reducer, {\n    product: [],\n    loading: true,\n    error: '',\n    loadingApply: false,\n    successApply: false,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get(`/api/products/request/page/${id}`);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n    fetchData();\n  }, [id, successApply]);\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n\n  async function applyHandler() {\n    try {\n      dispatch({ type: 'APPLY_REQUEST' });\n      const { data } = await axios.put(`/api/products/request/${product._id}/apply`);\n      dispatch({ type: 'APPLY_SUCCESS' });\n      toast.success('Application Successful.');\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({ type: 'APPLY_FAIL' });\n    }\n  }\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    if (!comment || !rating) {\n      toast.error('Please enter review and rating!');\n      return;\n    }\n    try {\n      const { data } = await axios.post(\n        `/api/products/request/${product._id}/reviews`,\n        { rating, comment, name: userInfo.name},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}`}\n        }\n      );\n      dispatch({type: 'CREATE_SUCCESS'});\n      toast.success('Review submitted successfully.');\n      product.reviews.unshift(data.review);\n      product.numReviews = data.numReviews;\n      product.rating = data.rating;\n      dispatch({type: 'REFRESH_PRODUCT', payload: product});\n      window.scrollTo({\n        behaviour: 'smooth',\n        top: reviewsRef.current.offsetTop,\n      });\n\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({type: 'CREATE_FAIL'});\n    }\n  };\n\n  return loading ? (\n    <LoadingBox />\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <Row>\n        <Col md={6}>\n          <img\n            className=\"img-large\"\n            src={product.image}\n            alt={product.name}\n          ></img>\n        </Col>\n        <Col md={3}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Helmet>\n                <title>{product.name}</title>\n              </Helmet>\n              <h2>{product.name}</h2>\n            </ListGroup.Item>\n            <ListGroup.Item>Budget: ${product.price}</ListGroup.Item>\n            <ListGroup.Item>\n              Description:\n              <p>{product.description}</p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h5>Requestor: <Link to={`/buyer/${product.user._id}`}> {product.user.name} </Link></h5>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                rating={product.rating}\n                numReviews={product.numReviews}\n              ></Rating>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card>\n            <Card.Body>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Earnings:</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Required Amount:</Col>\n                    <Col>\n                      {product.stock}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {userInfo && userInfo.userRole === 'seller' && !product.applicant ? (\n                  <ListGroup.Item>\n                    {loadingApply && <LoadingBox />}\n                    <div className=\"d-grid\">\n                      <Button type=\"button\" onClick={applyHandler}>\n                        Apply Now\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                ) : userInfo && product.applicant && userInfo._id != product.user._id ? (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Chosen Craftsman: </Col>\n                      <Col>{product.applicant.shop}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                ) : userInfo && userInfo._id === product.user._id && product.applicant ? (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Your Crafter: </Col>\n                      <Col><Link to={`/seller/${product.applicant.shop}`}>{product.applicant.shop}</Link></Col>\n                    </Row>\n                  </ListGroup.Item>\n                ) : !userInfo ? (\n                  null\n                ) : (\n                  null\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <div className=\"my-3\">\n        <h2 ref={reviewsRef}>Reviews</h2>\n        <div className=\"mb-3\">\n          {product.reviews.length === 0 && (\n            <MessageBox>There is no review.</MessageBox>\n          )}\n        </div>\n        <ListGroup>\n          {product.reviews.map((review) => (\n            <ListGroup.Item key={review._id}>\n            <strong>{review.name}</strong>\n            <Rating rating = {review.rating} caption=\" \"></Rating>\n            <p>{review.createdAt.substring(0, 10)}</p>\n            <p>{review.comment}</p>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        <div className=\"my-3\">\n          {userInfo && userInfo.userRole === 'seller' ? (\n            <Form onSubmit={submitHandler}>\n              <h2>Write a review</h2>\n              <Form.Group className=\"mb-3\" controlId=\"rating\">\n                <Form.Label>Rating</Form.Label>\n                <Form.Select\n                  aria-label=\"Rating\"\n                  value={rating}\n                  onChange={(e) => setRating(e.target.value)}>\n                  <option value=\"\">Select...</option>\n                  <option value=\"1\">1 - Poor.</option>\n                  <option value=\"2\">2 - Fair</option>\n                  <option value=\"3\">3 - Good</option>\n                  <option value=\"4\">4 - Very Good</option>\n                  <option value=\"5\">5 - Excellent</option>\n                </Form.Select>\n              </Form.Group>\n              <FloatingLabel controlId=\"floatingTextarea\" label=\"Comments\" className=\"mb-3\">\n                <Form.Control as=\"textarea\" placeholder=\"Leave a review here\" value={comment} onChange={(e)=> setComment(e.target.value)} />\n              </FloatingLabel>\n              <div className=\"mb-3\">\n                <Button disabled={loadingCreateReview} type=\"submit\">\n                  Submit\n                </Button>\n                {loadingCreateReview && <LoadingBox />}\n              </div>\n            </Form>\n          ) : !userInfo ? (\n            <MessageBox>\n              Please <Link to={`/signin?redirect=/product/${product.slug}`}>Sign In</Link> to leave a review.\n            </MessageBox>\n          ) : (\n            null\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default RequestPostScreen;\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/DashboardScreen.js",["231","232","233"],"import React, { useReducer, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport Chart from 'react-google-charts';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ProductSeller from '../components/ProductSeller';\nimport Card from 'react-bootstrap/Card';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, summary: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload};\n    case 'PRODUCT_REQUEST':\n      return { ...state, loading: true };\n    case 'PRODUCT_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'PRODUCT_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default function DashboardScreen() {\n  const [{ loading, summary, error, products }, dispatch] = useReducer(reducer, {\n    loading: true,\n    products: [],\n    error: '',\n  });\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  useEffect(() => {\n    const fetchData = async() => {\n      try {\n        const { data } = await axios.get('/api/orders/summary', {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: 'FETCH_SUCCESS', payload: data});\n      } catch(err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err),\n        });\n      }\n    }\n    const fetchProducts = async() => {\n      dispatch({ type: 'PRODUCT_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'PRODUCT_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'PRODUCT_FAIL', payload: err.message });\n      }\n    }\n    fetchData();\n    fetchProducts();\n  }, [userInfo]);\n\n    const isShop = (product) => (product.shop === userInfo.shop);\n    const sumRating = products.filter(isShop).map((product) => product.rating).reduce((a, c) => a+c, 0);\n    const avgRating = sumRating/products.filter(isShop).length;\n\n    const sumReviews = products.filter(isShop).map((product) => product.numReviews).reduce((a,c) => a+c, 0);\n\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <Row>\n            <Col md={4}>\n              <Card>\n                <Card.Body>\n                  <Card.Title>\n                    {summary.productSales[0].numSales}\n                  </Card.Title>\n                  <Card.Text> Total Orders</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <Card.Body>\n                  <Card.Title>\n                    $\n                    {summary.productSales[0].totalRevenue}\n                  </Card.Title>\n                  <Card.Text> Total Revenue</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <br/>\n          <br/>\n          <Row>\n            <Col>\n              <Row>\n                {products.filter(isShop).map((product) => (\n                  <Col key={product.slug} sm={12} md={6} lg={4} className=\"mb-3\">\n                    <ProductSeller product={product}></ProductSeller>\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/ProductRequestScreen.js",["234","235","236"],"import React, { useReducer, useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreate: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreate: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreate: false };\n    case 'DELETE_REQUEST':\n      return { ...state, loadingDelete: true, successDelete: false };\n    case 'DELETE_SUCCESS':\n      return { ...state, loadingDelete: false, successDelete: true };\n    case 'DELETE_FAIL':\n      return { ...state, loadingDelete: false, successDelete: false };\n    case 'DELETE_RESET':\n      return { ...state, loadingDelete: false, successDelete: false };\n    default:\n      return state;\n  }\n};\n\nexport default function ProductRequestScreen() {\n  const [{ loading, error, products, loadingCreate, loadingDelete, successDelete }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  const isBuyer = (product) => (product.user === userInfo._id);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/request`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {}\n    };\n    if (successDelete) {\n      dispatch({type: 'DELETE_RESET'});\n    } else {\n      fetchData();\n    }\n  }, [userInfo, successDelete]);\n\n  const createHandler = async () => {\n    if (window.confirm(\"Confirm Creation\")) {\n\n      try {\n        dispatch({type: 'CREATE_REQUEST'});\n        const { data } = await axios.post(\n          '/api/products/request',\n          {},\n          {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        toast.success('Request Listed Successfully!');\n        dispatch({type: 'CREATE_SUCCESS'});\n        navigate(`/buyer/request/${data.product._id}`);\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'CREATE_FAIL'});\n      }\n    }\n  }\n\n  const deleteHandler = async (product) => {\n    if (window.confirm(\"Confirm deletion\")) {\n      try {\n        await axios.delete(`/api/products/request/${product._id}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        toast.success(\"Request deleted\");\n        dispatch({type: 'DELETE_SUCCESS'});\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'DELETE_FAIL'});\n      }\n    }\n  }\n\n  return (\n    <div className=\"order-history-box\">\n    <Row>\n      <Col>\n        <h1>Requests</h1>\n      </Col>\n      <Col className=\"col text-end\">\n        <div>\n          <Button type=\"button\" onClick={createHandler}>List Request</Button>\n        </div>\n      </Col>\n    </Row>\n    {loadingCreate && <LoadingBox />}\n    {loadingDelete && <LoadingBox />}\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>TITLE</th>\n                <th>BUDGET</th>\n                <th>ACTIONS</th>\n                <th>CRAFTER</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.filter(isBuyer).map((product) => (\n                <tr key={product._id}>\n                  <td>#{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>\n                    <Button type=\"button\" variant=\"light\" onClick={() => navigate(`/buyer/request/${product._id}`)}>\n                      Edit\n                    </Button>\n                    &nbsp;\n                    <Button type=\"button\" variant=\"light\" onClick={() => deleteHandler(product)}>\n                      Delete\n                    </Button>\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/buyer/request/page/${product._id}`);\n                    }}>Details\n                    </Button>\n                  </td>\n                  <td>{product.applicant ? product.applicant.shop.toUpperCase() : 'NONE'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestsPageScreen.js",["237","238","239","240","241"],"import { useEffect, useReducer, useState, useContext } from 'react';\nimport axios from 'axios';\nimport logger from 'use-reducer-logger';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Request from '../components/Request';\nimport Seller from '../components/Seller';\nimport Card from 'react-bootstrap/Card';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function RequestsPageScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: '',\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    fetchData();\n  }, []);\n\n  const isRequest = (product) => (product.type === \"request\");\n\n  return (\n    <div>\n      <Helmet>\n        <title>Product/Services Requests</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\">Product/Services Requests</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {products.filter(isRequest).map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Request product={product}></Request>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/VerificationScreen.js",["242","243","244","245","246","247","248","249","250","251","252","253"],"import React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n    case 'UPLOAD_REQUEST':\n      return { ...state, loadingUpload: true, errorUpload: '' };\n    case 'UPLOAD_SUCCESS':\n      return { ...state, loadingUpload: false, errorUpload: '' };\n    case 'UPLOAD_FAIL':\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function VerificationScreen() {\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const { id: productId } = params;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const [name, setName] = useState(userInfo.name);\n  const [shop, setShop] = useState(userInfo.shop);\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n    try {\n      dispatch({type:'UPLOAD_REQUEST'});\n      const { data } = await axios.post('/api/upload', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({type: 'UPLOAD_SUCCESS'});\n      toast.success('Image Uploaded Successfully');\n      setImage(data.secure_url);\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({type: 'UPLOAD_FAIL', payload: getError(err)});\n\n    }\n  }\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          handmade: true\n        },\n        {\n          headers: {Authorization: `Bearer ${userInfo.token}`},\n        }\n      );\n      dispatch({type: 'UPDATE_SUCCESS'});\n      toast.success('Verification Successful!');\n    } catch(err) {\n      dispatch({type: 'FETCH_FAIL'});\n      toast.error(getError(err));\n    }\n  };\n\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Verification</title>\n      </Helmet>\n      <h1>Verification - Apply for \"Handmaker\" Status</h1>\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"shop\">\n            <Form.Label>Shop</Form.Label>\n            <Form.Control\n              value={shop}\n              required disabled\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId = \"imageFile\">\n            <Form.Label>Upload Image Of Your Process</Form.Label>\n            <Form.Control type=\"file\" onChange={uploadFileHandler} />\n            {loadingUpload && <LoadingBox />}\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <div className=\"mb-3\">\n            <Button disabled={loadingUpdate} type=\"submit\">\n              Apply\n            </Button>\n            {loadingUpdate && <LoadingBox></LoadingBox>}\n          </div>\n        </Form>\n    </Container>\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/RequestsPageSellerScreen.js",["254","255","256","257","258"],"import React, { useReducer, useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function RequestsPageSellerScreen() {\n  const [{ loading, error, products }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/request`, {\n          headers: {Authorization: `Bearer ${userInfo.token}`}\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {}\n    };\n    fetchData();\n  }, [userInfo]);\n\n  const isCrafter = (product) => (product.applicant.shop === userInfo.shop);\n\n  return (\n    <div className=\"order-history-box\">\n    <Row>\n      <Col>\n        <h1>Requests</h1>\n      </Col>\n    </Row>\n    {loading && <LoadingBox />}\n    {loading && <LoadingBox />}\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>TITLE</th>\n                <th>BUDGET</th>\n                <th>ACTIONS</th>\n                <th>CRAFTER</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.filter(isCrafter).map((product) => (\n                <tr key={product._id}>\n                  <td>#{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>\n                  {product.numReviews === 0 ? (\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/buyer/request/page/${product._id}`);\n                    }}>Leave Review\n                    </Button>\n                  ) : (\n                    <Button type=\"button\" id=\"check-review\" variant=\"light\" onClick={() => {\n                      navigate(`/buyer/request/page/${product._id}`);\n                    }}>Check Review\n                    </Button>\n                  )}\n                  </td>\n                  <td>{product.applicant.shop}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/screens/SellerScreen.js",["259","260","261","262","263","264","265","266"],"import axios from 'axios';\nimport React, {useReducer, useEffect, useContext, useState} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Product from '../components/Product';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { toast } from 'react-toastify';\nimport Rating from '../components/Rating';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, user: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function SellerScreen() {\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n\n  const params = useParams();\n  const { shop } = params;\n\n  const [{ loading, error, products, user }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: '',\n    user: [],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    const fetchUser = async () => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get(\n          `/api/users/${shop}`,\n        );\n        dispatch({type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({type: 'FETCHUSER_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n    fetchData();\n    fetchUser();\n  }, [shop]);\n  const isShop = (product) => (product.shop === user.shop);\n  const hasRating = (product) => (product.numReviews > 0);\n  const sumRating = products.filter(isShop).map((product) => product.rating).reduce((a, c) => a+c, 0);\n  const avgRating = sumRating/products.filter(isShop).filter(hasRating).length;\n\n  const sumReviews = products.filter(isShop).map((product) => product.numReviews).reduce((a,c) => a+c, 0);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Shop</title>\n      </Helmet>\n      <h1>{user.shop}'s Shop</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n          <Col lg={3} md={4} sm={12} className=\"me-5\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"mb-3\"><strong>{user.shop}</strong></Card.Title>\n                <img src={user.logo} className=\"seller-logo\"/>\n\n                <Card.Text className=\"mt-3\">\n                <strong> About {user.shop}: </strong>\n                <br/>\n                  {user.description}\n                </Card.Text>\n                <hr/>\n                {user.handmade === true ? (\n                  <i className=\"fas fa-star star\"><h4>Verified Handmade!</h4></i>\n                ) : (\n                  <h5>No Badges Yet...</h5>\n                )}\n                <hr/>\n                <Card.Text>\n                  <Rating numReviews={sumReviews} rating={avgRating}/>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              {products.filter(isShop).map((product) => (\n                <Col key={product.slug} sm={12} md={6} lg={4} className=\"mb-3\">\n                  <Product product={product}></Product>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/BuyerRoute.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/SellerRoute.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/SearchBox.js",["267"],"import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useNavigate } from 'react-router-dom';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\n\nexport default function SearchBox() {\n\n  const navigate = useNavigate();\n\n  const [query, setQuery] = useState('');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    navigate(query ? `/search/?query=${query}` : '/search');\n  };\n  return (\n    <Form className=\"d-flex me-auto\" id=\"search-box-form\" onSubmit={submitHandler}>\n      <InputGroup>\n        <Form.Control type=\"text\" name=\"q\" id=\"q\" onChange={(e) => setQuery(e.target.value)} placeholder=\"Search Products\" aria-Label=\"Search Products\" aria-describedby=\"button-search\" />\n        <Button variant=\"outline-primary\" type=\"submit\" id=\"button-search\" className=\"search-box\">\n          <i className=\"fas fa-search\" />\n        </Button>\n      </InputGroup>\n    </Form>\n  )\n}\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/LoadingBox.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/MessageBox.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Rating.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Product.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/ProductSeller.js",["268","269"],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport Badge from 'react-bootstrap/Badge';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction ProductSeller(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${item._id}`);\n    if (data.stock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card style={{border: \"1px solid grey\"}}>\n      <Link to={`/product/${product.slug}`}>\n        <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product.slug}`}>\n          <Card.Title>{product.name}</Card.Title>\n        </Link>\n        <Rating rating={product.rating} numReviews={product.numReviews} />\n        <Card.Text><h5>Price: <strong>${product.price}</strong></h5></Card.Text>\n        <Card.Text><h5>Sales: <strong>{product.sales}</strong></h5></Card.Text>\n        <Card.Text><h5>Stock: <strong>{product.stock}</strong></h5></Card.Text>\n      </Card.Body>\n      {product.stock < 5 ? (\n        <Badge bg=\"warning\">Low Stock</Badge>\n      ) : product.stock === 0 ? (\n        <Badge bg=\"danger\">Out of Stock</Badge>\n      ) : (\n        <Badge bg=\"success\">In Stock</Badge>\n      )}\n    </Card>\n  );\n}\nexport default ProductSeller;\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Seller.js",["270","271","272","273","274","275"],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Seller(props) {\n  const { seller } = props;\n\n  return (\n    <Card className=\"user-card\">\n      <Card.Body className=\"text-center\">\n        <Link to={`/seller/${seller.shop}`}>\n          <Card.Title className=\"mb-3\"><strong>{seller.shop}</strong></Card.Title>\n        </Link>\n        <img src={seller.logo} className=\"seller-logo\"/>\n\n        <Card.Text className=\"mt-3\">\n        <strong> About {seller.shop}: </strong>\n        <br/>\n          {seller.description}\n        </Card.Text>\n        <hr/>\n        {seller.handmade === true ? (\n          <i className=\"fas fa-star star\"><h4>Verified Handmade!</h4></i>\n        ) : (\n          <h5>No Badges Yet...</h5>\n        )}\n        <hr/>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Seller;\n","/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/CheckoutSteps.js",[],"/Users/varrene/Desktop/orbital/Craftant_v2/frontend/src/components/Request.js",["276","277","278"],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Request(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/request/${item._id}`);\n    if (data.stock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card className=\"product-card\" style={{border: \"1px solid grey\"}}>\n      <Link to={`/buyer/request/page/${product._id}`}>\n        <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      </Link>\n      <Card.Body>\n        <Row>\n          <Link to={`/buyer/request/page/${product._id}`}>\n            <Card.Title>{product.name}</Card.Title>\n          </Link>\n        </Row>\n        <Row>\n          <Rating rating={product.rating} numReviews={product.numReviews} />\n        </Row>\n        <Row>\n          <Card.Text>Budget: ${product.price}</Card.Text>\n        </Row>\n        <Row>\n          <Card.Text>Require Amount: {product.stock}</Card.Text>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Request;\n",{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":1,"column":33,"nodeType":"285","messageId":"286","endLine":1,"endColumn":41},{"ruleId":"283","severity":1,"message":"287","line":8,"column":8,"nodeType":"285","messageId":"286","endLine":8,"endColumn":12},{"ruleId":"283","severity":1,"message":"288","line":37,"column":28,"nodeType":"285","messageId":"286","endLine":37,"endColumn":39},{"ruleId":"283","severity":1,"message":"289","line":38,"column":11,"nodeType":"285","messageId":"286","endLine":38,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":41,"column":21,"nodeType":"292","messageId":"293","endLine":41,"endColumn":23},{"ruleId":"283","severity":1,"message":"294","line":2,"column":29,"nodeType":"285","messageId":"286","endLine":2,"endColumn":38},{"ruleId":"283","severity":1,"message":"284","line":2,"column":52,"nodeType":"285","messageId":"286","endLine":2,"endColumn":60},{"ruleId":"283","severity":1,"message":"295","line":3,"column":29,"nodeType":"285","messageId":"286","endLine":3,"endColumn":38},{"ruleId":"283","severity":1,"message":"296","line":11,"column":8,"nodeType":"285","messageId":"286","endLine":11,"endColumn":12},{"ruleId":"283","severity":1,"message":"297","line":94,"column":15,"nodeType":"285","messageId":"286","endLine":94,"endColumn":19},{"ruleId":"283","severity":1,"message":"297","line":108,"column":15,"nodeType":"285","messageId":"286","endLine":108,"endColumn":19},{"ruleId":"283","severity":1,"message":"284","line":2,"column":51,"nodeType":"285","messageId":"286","endLine":2,"endColumn":59},{"ruleId":"283","severity":1,"message":"298","line":8,"column":10,"nodeType":"285","messageId":"286","endLine":8,"endColumn":21},{"ruleId":"283","severity":1,"message":"299","line":8,"column":34,"nodeType":"285","messageId":"286","endLine":8,"endColumn":38},{"ruleId":"283","severity":1,"message":"300","line":12,"column":8,"nodeType":"285","messageId":"286","endLine":12,"endColumn":14},{"ruleId":"283","severity":1,"message":"301","line":14,"column":8,"nodeType":"285","messageId":"286","endLine":14,"endColumn":17},{"ruleId":"283","severity":1,"message":"288","line":39,"column":28,"nodeType":"285","messageId":"286","endLine":39,"endColumn":39},{"ruleId":"283","severity":1,"message":"289","line":40,"column":11,"nodeType":"285","messageId":"286","endLine":40,"endColumn":19},{"ruleId":"302","severity":1,"message":"303","line":103,"column":17,"nodeType":"304","endLine":103,"endColumn":63},{"ruleId":"283","severity":1,"message":"295","line":6,"column":23,"nodeType":"285","messageId":"286","endLine":6,"endColumn":32},{"ruleId":"283","severity":1,"message":"284","line":1,"column":40,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"299","line":3,"column":23,"nodeType":"285","messageId":"286","endLine":3,"endColumn":27},{"ruleId":"283","severity":1,"message":"305","line":52,"column":9,"nodeType":"285","messageId":"286","endLine":52,"endColumn":11},{"ruleId":"283","severity":1,"message":"306","line":20,"column":16,"nodeType":"285","messageId":"286","endLine":20,"endColumn":23},{"ruleId":"283","severity":1,"message":"307","line":21,"column":16,"nodeType":"285","messageId":"286","endLine":21,"endColumn":23},{"ruleId":"283","severity":1,"message":"308","line":22,"column":16,"nodeType":"285","messageId":"286","endLine":22,"endColumn":23},{"ruleId":"283","severity":1,"message":"309","line":23,"column":23,"nodeType":"285","messageId":"286","endLine":23,"endColumn":37},{"ruleId":"283","severity":1,"message":"310","line":24,"column":20,"nodeType":"285","messageId":"286","endLine":24,"endColumn":31},{"ruleId":"290","severity":1,"message":"291","line":43,"column":21,"nodeType":"292","messageId":"293","endLine":43,"endColumn":23},{"ruleId":"283","severity":1,"message":"311","line":10,"column":8,"nodeType":"285","messageId":"286","endLine":10,"endColumn":18},{"ruleId":"283","severity":1,"message":"310","line":48,"column":20,"nodeType":"285","messageId":"286","endLine":48,"endColumn":31},{"ruleId":"283","severity":1,"message":"312","line":49,"column":17,"nodeType":"285","messageId":"286","endLine":49,"endColumn":25},{"ruleId":"283","severity":1,"message":"313","line":51,"column":12,"nodeType":"285","messageId":"286","endLine":51,"endColumn":25},{"ruleId":"314","severity":1,"message":"315","line":72,"column":6,"nodeType":"316","endLine":72,"endColumn":8,"suggestions":"317"},{"ruleId":"302","severity":1,"message":"303","line":134,"column":9,"nodeType":"304","endLine":137,"endColumn":10},{"ruleId":"283","severity":1,"message":"318","line":3,"column":8,"nodeType":"285","messageId":"286","endLine":3,"endColumn":21},{"ruleId":"283","severity":1,"message":"319","line":8,"column":8,"nodeType":"285","messageId":"286","endLine":8,"endColumn":13},{"ruleId":"283","severity":1,"message":"320","line":52,"column":9,"nodeType":"285","messageId":"286","endLine":52,"endColumn":17},{"ruleId":"283","severity":1,"message":"288","line":79,"column":28,"nodeType":"285","messageId":"286","endLine":79,"endColumn":39},{"ruleId":"283","severity":1,"message":"321","line":80,"column":11,"nodeType":"285","messageId":"286","endLine":80,"endColumn":15},{"ruleId":"283","severity":1,"message":"297","line":85,"column":15,"nodeType":"285","messageId":"286","endLine":85,"endColumn":19},{"ruleId":"290","severity":1,"message":"322","line":191,"column":67,"nodeType":"292","messageId":"293","endLine":191,"endColumn":69},{"ruleId":"283","severity":1,"message":"323","line":3,"column":8,"nodeType":"285","messageId":"286","endLine":3,"endColumn":13},{"ruleId":"283","severity":1,"message":"324","line":70,"column":11,"nodeType":"285","messageId":"286","endLine":70,"endColumn":20},{"ruleId":"283","severity":1,"message":"325","line":72,"column":11,"nodeType":"285","messageId":"286","endLine":72,"endColumn":21},{"ruleId":"283","severity":1,"message":"284","line":1,"column":40,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"299","line":3,"column":23,"nodeType":"285","messageId":"286","endLine":3,"endColumn":27},{"ruleId":"283","severity":1,"message":"305","line":52,"column":9,"nodeType":"285","messageId":"286","endLine":52,"endColumn":11},{"ruleId":"283","severity":1,"message":"284","line":1,"column":33,"nodeType":"285","messageId":"286","endLine":1,"endColumn":41},{"ruleId":"283","severity":1,"message":"326","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":14},{"ruleId":"283","severity":1,"message":"287","line":8,"column":8,"nodeType":"285","messageId":"286","endLine":8,"endColumn":12},{"ruleId":"283","severity":1,"message":"288","line":28,"column":28,"nodeType":"285","messageId":"286","endLine":28,"endColumn":39},{"ruleId":"283","severity":1,"message":"289","line":29,"column":11,"nodeType":"285","messageId":"286","endLine":29,"endColumn":19},{"ruleId":"283","severity":1,"message":"294","line":1,"column":29,"nodeType":"285","messageId":"286","endLine":1,"endColumn":38},{"ruleId":"283","severity":1,"message":"311","line":10,"column":8,"nodeType":"285","messageId":"286","endLine":10,"endColumn":18},{"ruleId":"283","severity":1,"message":"320","line":42,"column":9,"nodeType":"285","messageId":"286","endLine":42,"endColumn":17},{"ruleId":"283","severity":1,"message":"327","line":44,"column":15,"nodeType":"285","messageId":"286","endLine":44,"endColumn":24},{"ruleId":"283","severity":1,"message":"288","line":46,"column":28,"nodeType":"285","messageId":"286","endLine":46,"endColumn":39},{"ruleId":"283","severity":1,"message":"328","line":48,"column":12,"nodeType":"285","messageId":"286","endLine":48,"endColumn":19},{"ruleId":"283","severity":1,"message":"329","line":48,"column":21,"nodeType":"285","messageId":"286","endLine":48,"endColumn":26},{"ruleId":"283","severity":1,"message":"330","line":53,"column":10,"nodeType":"285","messageId":"286","endLine":53,"endColumn":14},{"ruleId":"283","severity":1,"message":"306","line":53,"column":16,"nodeType":"285","messageId":"286","endLine":53,"endColumn":23},{"ruleId":"283","severity":1,"message":"307","line":54,"column":16,"nodeType":"285","messageId":"286","endLine":54,"endColumn":23},{"ruleId":"283","severity":1,"message":"331","line":55,"column":10,"nodeType":"285","messageId":"286","endLine":55,"endColumn":15},{"ruleId":"283","severity":1,"message":"297","line":83,"column":15,"nodeType":"285","messageId":"286","endLine":83,"endColumn":19},{"ruleId":"283","severity":1,"message":"284","line":1,"column":40,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"299","line":3,"column":23,"nodeType":"285","messageId":"286","endLine":3,"endColumn":27},{"ruleId":"283","severity":1,"message":"332","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"333","line":6,"column":10,"nodeType":"285","messageId":"286","endLine":6,"endColumn":15},{"ruleId":"283","severity":1,"message":"305","line":38,"column":9,"nodeType":"285","messageId":"286","endLine":38,"endColumn":11},{"ruleId":"283","severity":1,"message":"284","line":2,"column":51,"nodeType":"285","messageId":"286","endLine":2,"endColumn":59},{"ruleId":"283","severity":1,"message":"298","line":8,"column":10,"nodeType":"285","messageId":"286","endLine":8,"endColumn":21},{"ruleId":"283","severity":1,"message":"299","line":8,"column":34,"nodeType":"285","messageId":"286","endLine":8,"endColumn":38},{"ruleId":"283","severity":1,"message":"300","line":12,"column":8,"nodeType":"285","messageId":"286","endLine":12,"endColumn":14},{"ruleId":"283","severity":1,"message":"301","line":14,"column":8,"nodeType":"285","messageId":"286","endLine":14,"endColumn":17},{"ruleId":"283","severity":1,"message":"288","line":39,"column":28,"nodeType":"285","messageId":"286","endLine":39,"endColumn":39},{"ruleId":"283","severity":1,"message":"289","line":40,"column":11,"nodeType":"285","messageId":"286","endLine":40,"endColumn":19},{"ruleId":"302","severity":1,"message":"303","line":101,"column":17,"nodeType":"304","endLine":101,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":20,"column":124,"nodeType":"336","endLine":20,"endColumn":152},{"ruleId":"283","severity":1,"message":"300","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":14},{"ruleId":"283","severity":1,"message":"337","line":18,"column":9,"nodeType":"285","messageId":"286","endLine":18,"endColumn":25},{"ruleId":"283","severity":1,"message":"300","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":14},{"ruleId":"283","severity":1,"message":"338","line":4,"column":8,"nodeType":"285","messageId":"286","endLine":4,"endColumn":14},{"ruleId":"283","severity":1,"message":"339","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":13},{"ruleId":"283","severity":1,"message":"340","line":6,"column":10,"nodeType":"285","messageId":"286","endLine":6,"endColumn":20},{"ruleId":"283","severity":1,"message":"341","line":7,"column":10,"nodeType":"285","messageId":"286","endLine":7,"endColumn":15},{"ruleId":"302","severity":1,"message":"303","line":18,"column":9,"nodeType":"304","endLine":18,"endColumn":57},{"ruleId":"283","severity":1,"message":"300","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":14},{"ruleId":"283","severity":1,"message":"342","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":11},{"ruleId":"283","severity":1,"message":"337","line":19,"column":9,"nodeType":"285","messageId":"286","endLine":19,"endColumn":25},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'ctxDispatch' is assigned a value but never used.","'userInfo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Form' is defined but never used.","'data' is assigned a value but never used.","'useNavigate' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'ListGroup' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'sp' is assigned a value but never used.","'setName' is assigned a value but never used.","'setShop' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setHandmade' is assigned a value but never used.","'MessageBox' is defined but never used.","'setMoney' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.","ArrayExpression",["345"],"'LinkContainer' is defined but never used.","'Badge' is defined but never used.","'navigate' is assigned a value but never used.","'cart' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Chart' is defined but never used.","'avgRating' is assigned a value but never used.","'sumReviews' is assigned a value but never used.","'Seller' is defined but never used.","'productId' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'name' is assigned a value but never used.","'image' is assigned a value but never used.","'getError' is defined but never used.","'toast' is defined but never used.","jsx-a11y/aria-props","aria-Label: This attribute is an invalid ARIA attribute. Did you mean to use aria-label,aria-level?","JSXAttribute","'addToCartHandler' is assigned a value but never used.","'Rating' is defined but never used.","'axios' is defined but never used.","'useContext' is defined but never used.","'Store' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},"Update the dependencies array to be: [userInfo.token]",{"range":"348","text":"349"},[2542,2544],"[userInfo.token]"]