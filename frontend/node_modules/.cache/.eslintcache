[{"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/index.js":"1","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/Store.js":"2","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/App.js":"3","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/reportWebVitals.js":"4","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/CartScreen.js":"5","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/HomeScreen.js":"6","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductScreen.js":"7","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SigninScreen.js":"8","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/utils.js":"9","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Product.js":"10","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Rating.js":"11","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/MessageBox.js":"12","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/LoadingBox.js":"13","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ShippingAddressScreen.js":"14","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/CheckoutSteps.js":"15","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RegisterScreen.js":"16","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/PaymentMethodScreen.js":"17","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/PlaceOrderScreen.js":"18","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderScreen.js":"19","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderHistoryScreen.js":"20","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProfileScreen.js":"21","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/SearchBox.js":"22","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/DashboardScreen.js":"23","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/SellerRoute.js":"24","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/BuyerRoute.js":"25","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductListingScreen.js":"26","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductEditScreen.js":"27","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SearchScreen.js":"28","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderListScreen.js":"29","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderHistorySellerScreen.js":"30","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/VerificationScreen.js":"31","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Seller.js":"32","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductRequestScreen.js":"33","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestEditScreen.js":"34","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Request.js":"35","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestsPageScreen.js":"36","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestPostScreen.js":"37","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SellerScreen.js":"38","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/BuyerScreen.js":"39","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestsPageSellerScreen.js":"40","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/ProductSeller.js":"41"},{"size":735,"mtime":1656232877084,"results":"42","hashOfConfig":"43"},{"size":2239,"mtime":1658571063266,"results":"44","hashOfConfig":"43"},{"size":10915,"mtime":1658756964705,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":1641302701000,"results":"46","hashOfConfig":"43"},{"size":4369,"mtime":1658656805191,"results":"47","hashOfConfig":"43"},{"size":3461,"mtime":1658584101718,"results":"48","hashOfConfig":"43"},{"size":8587,"mtime":1658649684728,"results":"49","hashOfConfig":"43"},{"size":3293,"mtime":1658562950827,"results":"50","hashOfConfig":"43"},{"size":150,"mtime":1641302701000,"results":"51","hashOfConfig":"43"},{"size":1637,"mtime":1658756964707,"results":"52","hashOfConfig":"43"},{"size":1459,"mtime":1658255416855,"results":"53","hashOfConfig":"43"},{"size":166,"mtime":1641302701000,"results":"54","hashOfConfig":"43"},{"size":225,"mtime":1641302701000,"results":"55","hashOfConfig":"43"},{"size":3124,"mtime":1656231003907,"results":"56","hashOfConfig":"43"},{"size":486,"mtime":1656154087514,"results":"57","hashOfConfig":"43"},{"size":4538,"mtime":1658519935782,"results":"58","hashOfConfig":"43"},{"size":1914,"mtime":1656231024910,"results":"59","hashOfConfig":"43"},{"size":5990,"mtime":1658756964714,"results":"60","hashOfConfig":"43"},{"size":8429,"mtime":1658656180129,"results":"61","hashOfConfig":"43"},{"size":2933,"mtime":1658655161322,"results":"62","hashOfConfig":"43"},{"size":6787,"mtime":1658657992288,"results":"63","hashOfConfig":"43"},{"size":968,"mtime":1658756964708,"results":"64","hashOfConfig":"43"},{"size":3798,"mtime":1658657233329,"results":"65","hashOfConfig":"43"},{"size":334,"mtime":1656789997503,"results":"66","hashOfConfig":"43"},{"size":333,"mtime":1658250188644,"results":"67","hashOfConfig":"43"},{"size":5505,"mtime":1658653407600,"results":"68","hashOfConfig":"43"},{"size":7750,"mtime":1658654334478,"results":"69","hashOfConfig":"43"},{"size":7403,"mtime":1658255520454,"results":"70","hashOfConfig":"43"},{"size":2967,"mtime":1658646284272,"results":"71","hashOfConfig":"43"},{"size":2956,"mtime":1658572343027,"results":"72","hashOfConfig":"43"},{"size":4390,"mtime":1658298662832,"results":"73","hashOfConfig":"43"},{"size":1011,"mtime":1658574341491,"results":"74","hashOfConfig":"43"},{"size":5323,"mtime":1658604144326,"results":"75","hashOfConfig":"43"},{"size":7038,"mtime":1658577622988,"results":"76","hashOfConfig":"43"},{"size":1712,"mtime":1658653190007,"results":"77","hashOfConfig":"43"},{"size":2237,"mtime":1658592298294,"results":"78","hashOfConfig":"43"},{"size":9410,"mtime":1658751581454,"results":"79","hashOfConfig":"43"},{"size":4410,"mtime":1658661418913,"results":"80","hashOfConfig":"43"},{"size":4192,"mtime":1658661364588,"results":"81","hashOfConfig":"43"},{"size":3282,"mtime":1658756964716,"results":"82","hashOfConfig":"43"},{"size":1853,"mtime":1658652331322,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"fko13j",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"86"},"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/index.js",[],["184","185"],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/Store.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/App.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/reportWebVitals.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/CartScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/HomeScreen.js",["186","187","188","189"],"import { useEffect, useReducer, useState, useContext } from 'react';\nimport axios from 'axios';\nimport logger from 'use-reducer-logger';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Product from '../components/Product';\nimport Seller from '../components/Seller';\nimport Card from 'react-bootstrap/Card';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, users: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst isAvailable = (product) => (product.stock > 0);\nconst isActive = (user) => (user.shop);\n\nfunction HomeScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, products, users }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: '',\n    users: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    const fetchUser = async() => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get('/api/users');\n        dispatch({ type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({ type: 'FETCHUSER_FAIL', payload: err.message});\n      }\n    }\n    fetchData();\n    fetchUser();\n  }, []);\n\n  const isListing = (product) => (product.type === \"listing\");\n\n  return (\n    <div>\n      <Helmet>\n        <title>Craftant</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\">Featured Products</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {products.filter(isAvailable).filter(isListing).map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Product product={product}></Product>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n      <br/>\n      <h1 class=\"della-font-headers\">New Shops</h1>\n      <br/>\n      <div className=\"users\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {users.filter(isActive).map((user) => (\n              <Col key={user.email} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Seller seller={user}></Seller>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default HomeScreen;\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SigninScreen.js",["190","191","192","193","194","195"],"import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport Axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function SigninScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [shop, setShop] = useState('');\n  const [logo, setLogo] = useState('');\n  const [description, setDescription] = useState('');\n  const [handmade, setHandmade] = useState('');\n\n  const {state, dispatch: ctxDispatch } = useContext(Store);\n  const {userInfo} = state;\n\n  const togglePassword = () => {\n    function show() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'text');\n    }\n\n    function hide() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'password');\n    }\n\n    var pwShown = 0;\n\n    document.getElementById(\"eye\").addEventListener(\"click\", function () {\n        if (pwShown == 0) {\n            pwShown = 1;\n            show();\n        } else {\n            pwShown = 0;\n            hide();\n        }\n    }, false);\n  }\n\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    try{\n      const {data} = await Axios.post('/api/users/signin', {\n        email,\n        password,\n        description,\n        shop,\n        name,\n        handmade,\n        logo\n      });\n      ctxDispatch({type: 'USER_SIGNIN', payload: data})\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n\n    } catch(err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-4 della-font-headers text-center\">Welcome Back!<br/>Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" onClick={() => togglePassword()}></i>\n          <Form.Control type=\"password\" id=\"pwd\" required onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign In</Button>\n        </div>\n        <div className=\"mb-3\">\n          New customer?{' '}\n          <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/utils.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Product.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Rating.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/MessageBox.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/LoadingBox.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ShippingAddressScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/CheckoutSteps.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RegisterScreen.js",["196"],"import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport Axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function RegisterScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [userRole, setUserRole] = useState('');\n\n  const {state, dispatch: ctxDispatch } = useContext(Store);\n  const {userInfo} = state;\n\n  const togglePassword = () => {\n    function show() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'text');\n    }\n\n    function hide() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'password');\n    }\n\n    var pwShown = 0;\n\n    document.getElementById(\"eye\").addEventListener(\"click\", function () {\n        if (pwShown == 0) {\n            pwShown = 1;\n            show();\n        } else {\n            pwShown = 0;\n            hide();\n        }\n    }, false);\n  }\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n    } else {\n      try{\n        const {data} = await Axios.post('/api/users/register', {\n          name,\n          email,\n          password,\n          userRole,\n        });\n        ctxDispatch({type: 'USER_SIGNIN', payload: data})\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        navigate(redirect || '/');\n\n      } catch(err) {\n        toast.error(getError(err));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <h1 className=\"my-3 della-font-headers\">Register</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control required onChange={(e) => setName(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" onClick={() => togglePassword()} />\n          <Form.Control type=\"password\" id=\"pwd\" required onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" ></i>\n          <Form.Control type=\"password\" id=\"pwd\" required onChange={(e) => setConfirmPassword(e.target.value)}/>\n        </Form.Group>\n        <Form.Group controlId=\"userRole\">\n          <div className=\"wrapper\">\n            <input type=\"radio\" name=\"userRole\" id=\"option-1\" value=\"buyer\" onChange={(e) => setUserRole(e.target.value)}/>\n            <input type=\"radio\" name=\"userRole\" id=\"option-2\" value=\"seller\" onChange={(e) => setUserRole(e.target.value)}/>\n            <Form.Label for=\"option-1\" className=\"option option-1\">\n              <div className=\"dot\"></div>\n              <span>Buyer</span>\n            </Form.Label>\n            <Form.Label for=\"option-2\" className=\"option option-2\">\n              <div className=\"dot\"></div>\n              <span>Seller</span>\n            </Form.Label>\n          </div>\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button className=\"register-btn\" type=\"submit\">Register</Button>\n        </div>\n        <div className=\"mb-3\">\n          Already have an account?{' '}\n          <Link to={`/signin?redirect=${redirect}`}>Sign In</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/PaymentMethodScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/PlaceOrderScreen.js",["197","198","199","200"],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderScreen.js",["201","202"],"import axios from 'axios';\nimport React, {useReducer, useEffect, useContext} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { toast } from 'react-toastify';\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, order: action.payload, loading: false, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'PAY_REQUEST':\n      return { ...state, loadingPayment: true };\n    case 'PAY_SUCCESS':\n      return { ...state, loadingPayment: false, successPayment: true };\n    case 'PAY_FAIL':\n      return { ...state, loadingPayment: false };\n    case 'PAY_RESET':\n      return { ...state, loadingPayment: false, successPayment: false };\n    case 'DELIVER_REQUEST':\n      return { ...state, loadingDeliver: true };\n    case 'DELIVER_SUCCESS':\n      return { ...state, loadingDeliver: false, successDeliver: true };\n    case 'DELIVER_FAIL':\n      return { ...state, loadingDeliver: false, errorDeliver: action.payload };\n    case 'DELIVER_RESET':\n      return { ...state, loadingDeliver: false, successDeliver: false };\n\n    default:\n      return state;\n  }\n}\n\nexport default function OrderScreen() {\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const params = useParams();\n  const { id: orderId } = params;\n  const navigate = useNavigate();\n\n  const [{loading, error, order, loadingPayment, successPayment, loadingDeliver, successDeliver}, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: '',\n    loadingPayment: false,\n    successPayment: false,\n    loadingDeliver: false,\n    successDeliver: false,\n  });\n\n  useEffect(() => {\n    const fetchOrder = async() => {\n      try{\n        dispatch({type:'FETCH_REQUEST'});\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n          headers: {authorization: `Bearer ${userInfo.token}`},\n        });\n\n        dispatch({type: 'FETCH_SUCCESS', payload: data });\n      } catch(err) {\n        dispatch({type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    }\n    if (!userInfo) {\n      return navigate('/login');\n    }\n    if (!order._id || successPayment || successDeliver || (order._id && order._id !== orderId)) {\n      fetchOrder();\n      if (successPayment) {\n        dispatch({ type: 'PAY_RESET'});\n      }\n      if (successDeliver) {\n        dispatch({ type: 'DELIVER_RESET'});\n      }\n    }\n  }, [order, userInfo, orderId, navigate, successPayment, successDeliver]);\n\n  async function orderPaidHandler() {\n    try {\n      dispatch({ type: 'PAY_REQUEST' });\n      const { data } = await axios.put(`/api/orders/${order._id}/payment`, {}, {\n        headers: { authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: 'PAY_SUCCESS' });\n      toast.success('Payment Successful.');\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({ type: 'PAY_FAIL' });\n    }\n  }\n\n  async function deliverOrderHandler() {\n    try {\n      dispatch({ type: 'DELIVER_REQUEST' });\n      const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, {\n        headers: { authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: 'DELIVER_SUCCESS' });\n      toast.success('Order Delivered.');\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({ type: 'DELIVER_FAIL' });\n    }\n  }\n\n  return  (\n    loading? (\n      <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n      <div>\n        <Helmet>\n          <title>Order {orderId}</title>\n        </Helmet>\n        <h1 className=\"my-3 della-font-headers\">Order #{orderId}</h1>\n        <Row>\n          <Col md={8}>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Shipping</Card.Title>\n                <Card.Text>\n                  <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                  <strong>Address:</strong> {order.shippingAddress.address},\n                  {order.shippingAddress.city}, {order.shippingAddress.postalCode},\n                  {order.shippingAddress.country}\n                </Card.Text>\n                {order.isDelivered ? (\n                  <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                )}\n              </Card.Body>\n            </Card>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Payment</Card.Title>\n                <Card.Text>\n                  <strong>Method:</strong> {order.paymentMethod}\n                </Card.Text>\n                {order.isPaid ? (\n                  <MessageBox variant=\"success\">Paid at {order.paidAt}</MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                )}\n              </Card.Body>\n            </Card>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Items</Card.Title>\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item) => (\n                    <ListGroup.Item key={item._id}>\n                      <Row className=\"align-items-center\">\n                        <Col md={6}>\n                          <img src={item.image} alt={item.name} className=\"img-fluid rounded img-thumbnail\"></img>{' '}\n                          <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                        </Col>\n                        <Col md={3}>\n                          <span>{item.quantity}</span>\n                        </Col>\n                        <Col md={3}>${item.price}</Col>\n\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card className=\"mb-3\">\n              <Card.Body>\n                <Card.Title>Order Summary</Card.Title>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>${order.itemsPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>${order.shippingPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Order Total</Col>\n                      <Col>${order.totalPrice.toFixed(2)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {userInfo.userRole === 'buyer' && !order.isPaid && (\n                    <ListGroup.Item>\n                      {loadingPayment && <LoadingBox />}\n                      <div className=\"d-grid\">\n                        <Button type=\"button\" variant=\"light\" onClick={orderPaidHandler}>\n                          Make Payment\n                        </Button>\n                      </div>\n                    </ListGroup.Item>\n                  )}\n                  {userInfo.userRole === 'seller' && order.isPaid && !order.isDelivered && (\n                    <ListGroup.Item>\n                      {loadingDeliver && <LoadingBox />}\n                      <div className=\"d-grid\">\n                        <Button type=\"button\" variant=\"light\" onClick={deliverOrderHandler}>\n                          Order Delivered\n                        </Button>\n                      </div>\n                    </ListGroup.Item>\n                  )}\n                </ListGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n\n        </Row>\n      </div>\n    )\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderHistoryScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProfileScreen.js",["203","204","205","206","207","208"],"import React, { useContext, useState, useReducer, useEffect } from 'react';\nimport { Store } from '../Store';\nimport {Helmet} from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n    case 'UPLOAD_REQUEST':\n      return { ...state, loadingUpload: true, errorUpload: '' };\n    case 'UPLOAD_SUCCESS':\n      return { ...state, loadingUpload: false, errorUpload: '' };\n    case 'UPLOAD_FAIL':\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, user: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [shop, setShop] = useState(userInfo.shop);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [logo, setLogo] = useState('');\n  const [description, setDescription] = useState(userInfo.description);\n  const [handmade, setHandmade] = useState('');\n  const [money, setMoney] = useState(userInfo.money);\n\n  const [{ loadingUpdate, loadingUpload, user }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n    user: [],\n  });\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get(\n          '/api/users/profile', {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        dispatch({type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({type: 'FETCHUSER_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n    fetchUser();\n  }, []);\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n    } else {\n      try {\n        const { data } = await axios.put(\n          '/api/users/profile',\n          {\n            name, email, password, shop, description, logo, handmade, money\n          },\n          {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        dispatch({type: 'UPDATE_SUCCESS'});\n        ctxDispatch({type: 'USER_SIGNIN', payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        toast.success('User updated successfully!');\n      } catch(err) {\n        dispatch({type: 'FETCH_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n    try {\n      dispatch({type:'UPLOAD_REQUEST'});\n      const { data } = await axios.post('/api/upload', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({type: 'UPLOAD_SUCCESS'});\n      toast.success('Image Uploaded Successfully');\n      setLogo(data.secure_url);\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({type: 'UPLOAD_FAIL', payload: getError(err)});\n    }\n  }\n\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3 della-font-headers\">User Profile - <strong className=\"della-font-headers\" id=\"user-role-color\">{userInfo.userRole}</strong></h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control value={name} onChange={(e) => setName(e.target.value)} required/>\n        </Form.Group>\n\n        <img\n          className=\"seller-logo\"\n          src={userInfo.logo}\n        ></img>\n        <Form.Group className=\"mb-3\" controlId = \"imageFile\">\n          <Form.Label>Logo</Form.Label>\n          <Form.Control type=\"file\" onChange={uploadFileHandler} />\n          {loadingUpload && <LoadingBox />}\n        </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                onChange={(e) => setDescription(e.target.value)}\n                value= {description}\n              />\n            </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"money\">\n          <Form.Label>Balance</Form.Label>\n          <Form.Control type=\"text\" value={\"$\"+user.money} disabled/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n        </Form.Group>\n\n        {userInfo.userRole === 'seller' && !userInfo.shop ? (\n          <Form.Group className=\"mb-3\" controlId=\"shop\">\n            <Form.Label>Shop Name</Form.Label>\n            <Form.Control value={shop} onChange={(e) => setShop(e.target.value)} required/>\n          </Form.Group>\n        ) : userInfo.userRole === 'seller' && userInfo.shop ? (\n          <Form.Group className=\"mb-3\" controlId=\"shop\">\n            <Form.Label>Shop Name</Form.Label>\n            <Form.Control value={shop} onChange={(e) => setShop(e.target.value)} required disabled/>\n          </Form.Group>\n        ) : (\n          null\n        )}\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" onChange={(e) => setPassword(e.target.value)} required/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)} required/>\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update Details</Button>\n        </div>\n\n      </Form>\n    </div>\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/SearchBox.js",["209"],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/DashboardScreen.js",["210","211","212"],"import React, { useReducer, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport Chart from 'react-google-charts';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ProductSeller from '../components/ProductSeller';\nimport Card from 'react-bootstrap/Card';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, summary: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload};\n    case 'PRODUCT_REQUEST':\n      return { ...state, loading: true };\n    case 'PRODUCT_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'PRODUCT_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default function DashboardScreen() {\n  const [{ loading, summary, error, products }, dispatch] = useReducer(reducer, {\n    loading: true,\n    products: [],\n    error: '',\n  });\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  useEffect(() => {\n    const fetchData = async() => {\n      try {\n        const { data } = await axios.get('/api/orders/summary', {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: 'FETCH_SUCCESS', payload: data});\n      } catch(err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err),\n        });\n      }\n    }\n    const fetchProducts = async() => {\n      dispatch({ type: 'PRODUCT_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'PRODUCT_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'PRODUCT_FAIL', payload: err.message });\n      }\n    }\n    fetchData();\n    fetchProducts();\n  }, [userInfo]);\n\n    const isShop = (product) => (product.shop === userInfo.shop);\n    const sumRating = products.filter(isShop).map((product) => product.rating).reduce((a, c) => a+c, 0);\n    const avgRating = sumRating/products.filter(isShop).length;\n\n    const sumReviews = products.filter(isShop).map((product) => product.numReviews).reduce((a,c) => a+c, 0);\n\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <Row>\n            <Col md={4}>\n              <Card>\n                <Card.Body>\n                  <Card.Title>\n                    {summary.productSales[0].numSales}\n                  </Card.Title>\n                  <Card.Text> Total Orders</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <Card.Body>\n                  <Card.Title>\n                    $\n                    {summary.productSales[0].totalRevenue}\n                  </Card.Title>\n                  <Card.Text> Total Revenue</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <br/>\n          <br/>\n          <Row>\n            <Col>\n              <Row>\n                {products.filter(isShop).map((product) => (\n                  <Col key={product.slug} sm={12} md={6} lg={4} className=\"mb-3\">\n                    <ProductSeller product={product}></ProductSeller>\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/SellerRoute.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/BuyerRoute.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductListingScreen.js",["213","214","215"],"import React, { useReducer, useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreate: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreate: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreate: false };\n    case 'DELETE_REQUEST':\n      return { ...state, loadingDelete: true, successDelete: false };\n    case 'DELETE_SUCCESS':\n      return { ...state, loadingDelete: false, successDelete: true };\n    case 'DELETE_FAIL':\n      return { ...state, loadingDelete: false, successDelete: false };\n    case 'DELETE_RESET':\n      return { ...state, loadingDelete: false, successDelete: false };\n    default:\n      return state;\n  }\n};\n\nexport default function ProductListScreen() {\n  const [{ loading, error, products, loadingCreate, loadingDelete, successDelete }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  const isShop = (product) => (product.shop === userInfo.shop);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/seller`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {}\n    };\n    if (successDelete) {\n      dispatch({type: 'DELETE_RESET'});\n    } else {\n      fetchData();\n    }\n  }, [userInfo, successDelete]);\n\n  const createHandler = async () => {\n    if (window.confirm(\"Confirm Creation\")) {\n\n      try {\n        dispatch({type: 'CREATE_REQUEST'});\n        const { data } = await axios.post(\n          '/api/products',\n          {},\n          {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        toast.success('Product Listed Successfully!');\n        dispatch({type: 'CREATE_SUCCESS'});\n        navigate(`/seller/product/${data.product._id}`);\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'CREATE_FAIL'});\n      }\n    }\n  }\n\n  const deleteHandler = async (product) => {\n    if (window.confirm(\"Confirm deletion\")) {\n      try {\n        await axios.delete(`/api/products/${product._id}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        toast.success(\"Product deleted\");\n        dispatch({type: 'DELETE_SUCCESS'});\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'DELETE_FAIL'});\n      }\n    }\n  }\n\n  return (\n    <div className=\"order-history-box\">\n    <Row>\n      <Col>\n        <h1>Products</h1>\n      </Col>\n      <Col className=\"col text-end\">\n        <div>\n          <Button type=\"button\" onClick={createHandler}>List Product</Button>\n        </div>\n      </Col>\n    </Row>\n    {loadingCreate && <LoadingBox />}\n    {loadingDelete && <LoadingBox />}\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>CATEGORY</th>\n                <th>PRICE</th>\n                <th>SALES</th>\n                <th>TOTAL REVENUE</th>\n                <th>STOCK LEFT</th>\n                <th>ACTIONS</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.filter(isShop).map((product) => (\n                <tr key={product._id}>\n                  <td>#{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>{product.category}</td>\n                  <td>${product.price}</td>\n                  <td>{product.sales}</td>\n                  <td>${product.revenue}</td>\n                  <td>{product.stock}</td>\n                  <td>\n                    <Button type=\"button\" variant=\"light\" onClick={() => navigate(`/seller/product/${product._id}`)}>\n                      Edit\n                    </Button>\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/product/${product.slug}`);\n                    }}>\n                      Details\n                    </Button>\n                    &nbsp;\n                    <Button type=\"button\" variant=\"light\" onClick={() => deleteHandler(product)}>\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductEditScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SearchScreen.js",["216"],"import React, { useReducer, useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport LinkContainer from 'react-router-bootstrap/LinkContainer';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {Helmet} from 'react-helmet-async';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Product from '../components/Product';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload.products, countProducts: action.payload.countProducts, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst prices = [\n  {\n    name: '$1 to $50',\n    value: '1-50',\n  },\n  {\n    name: '$51 to $100',\n    value: '51-100',\n  },\n  {\n    name: '$101 to $200',\n    value: '101-200',\n  },\n  {\n    name: '$201 to $300',\n    value: '201-300',\n  },\n  {\n    name: '$301 to $1000',\n    value: '301-1000',\n  }\n];\n\nexport const ratings = [\n    {\n      name: '5stars',\n      rating: 5,\n    },\n    {\n      name: '4stars',\n      rating: 4,\n    },\n    {\n      name: '3stars',\n      rating: 3,\n    },\n\n    {\n      name: '2stars',\n      rating: 2,\n    },\n\n    {\n      name: '1star',\n      rating: 1,\n    },\n];\n\n\nexport default function SearchScreen() {\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n  const category = sp.get('category') || 'all';\n  const query = sp.get('query') || 'all';\n  const price = sp.get('price') || 'all';\n  const rating = sp.get('rating') || 'all';\n  const order = sp.get('order') || 'newest';\n\n  const [{ loading, error, products, countProducts}, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/search?query=${query}&category=${category}&price=${price}&rating=${rating}&order=${order}`);\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {\n        dispatch({\n          type: ' FETCH_FAIL',\n          payload: getError(err),\n        });\n      }\n    };\n    fetchData();\n  }, [category, price, error, order, rating, query]);\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/categories`);\n        setCategories(data);\n      } catch (err) {\n        toast.error(getError(err));\n      }\n    };\n    fetchCategories();\n  }, [dispatch]);\n\n  const getFilterUrl = (filter) => {\n    const filterCategory = filter.category || category;\n    const filterQuery = filter.query || query;\n    const filterRating = filter.rating || rating;\n    const filterPrice = filter.price || price;\n    const sortOrder = filter.order || order;\n\n    return `/search?category=${filterCategory}&query=${filterQuery}&price=${filterPrice}&rating=${filterRating}&order=${sortOrder}`;\n  }\n\n\n\n  return (\n    <div>\n      <Helmet>\n        <title>Search Products</title>\n      </Helmet>\n\n      <Row>\n        <Col md={3}>\n          <h3>Category</h3>\n          <div>\n            <ul>\n              <li>\n                <Link className={'all' === category ? 'text-bold' : ''} to={getFilterUrl({category: 'all'})}>\n                  Any\n                </Link>\n              </li>\n              {categories.map((c) => (\n                <li key={c}>\n                  <Link className={c === category ? 'text-bold' : ''} to={getFilterUrl({category: c})}>\n                    {c}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h3>Price</h3>\n            <ul>\n              <li>\n                <Link className={'all' === price ? 'text-bold' : ''} to={getFilterUrl({price: 'all'})}>\n                  Any\n                </Link>\n              </li>\n              {prices.map((p) => (\n                <li key={p.value}>\n                  <Link className={p.value === price ? 'text-bold' : ''} to={getFilterUrl({price: p.value})}>\n                    {p.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h3>Ratings</h3>\n            <ul>\n            <li>\n              <Link\n                to={getFilterUrl({ rating: 'all' })}\n                className={rating === 'all' ? 'text-bold' : ''}\n              > Any\n              </Link>\n            </li>\n              {ratings.map((r) => (\n                <li key={r.name}>\n                  <Link\n                    to={getFilterUrl({ rating: r.rating })}\n                    className={`${r.rating}` === `${rating}` ? 'text-bold' : ''}\n                  >\n                    <Rating caption={' stars'} rating={r.rating}></Rating>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </Col>\n        <Col md={9}>\n          {loading ? (\n            <LoadingBox />\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n            <>\n            <Row className=\"justify-content-between mb-3\">\n              <Col md={6}>\n                <div>\n                  {countProducts === 0 ? 'No' : countProducts} Results\n                  {query !== 'all' && ' : ' + query + ' '}\n                  {category !== 'all' && ' : ' + category + ' '}\n                  {price !== 'all' && ' : Price $' + price + ' '}\n                  {rating !== 'all' && ' : Rating ' + rating + 'stars '}\n                  {query !== 'all' || category !== 'all' || rating !== 'all' || price !== 'all' ? (\n                    <Button variant=\"light\" onClick={() => navigate('/search')}>\n                      <i className=\"fas fa-times-circle\" />\n                    </Button>\n                  ) : null}\n                </div>\n              </Col>\n              <Col className=\"text-end\">\n                Sort by{' '}\n                <select value={order} onChange={(e) => {\n                  navigate(getFilterUrl({order: e.target.value}));\n                }}>\n                <option value=\"newest\">Newest Listings</option>\n                <option value=\"lowest\">Price: Low to High</option>\n                <option value=\"highest\">Price: High to Low</option>\n                <option value=\"ratings\">Ratings: High to Low</option>\n                </select>\n              </Col>\n            </Row>\n            {products.length === 0 && (\n              <MessageBox>No Products Found</MessageBox>\n            )}\n            <Row>\n              {products.map((product) => (\n                <Col sm={6} lg={4} className=\"mb-3\" key={product._id}>\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n            </>\n          )}\n        </Col>\n      </Row>\n    </div>\n\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderListScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderHistorySellerScreen.js",["217"],"import React, {useContext, useEffect, useReducer } from 'react';\nimport {Helmet} from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { getError } from '../utils';\nimport Button from 'react-bootstrap/Button';\n\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, orders: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function OrderHistoryScreen() {\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n\n  const [{loading, error, orders}, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async() => {\n      dispatch({type: 'FETCH_REQUEST'});\n      try {\n        const {data} = await axios.get(\n          `/api/orders`,\n          {headers: {Authorization: `Bearer ${userInfo.token}`}}\n        );\n        dispatch({type: 'FETCH_SUCCESS', payload: data});\n      } catch(error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error),\n        });\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n\n  const isCompleted = (order) => (order.isPaid && order.isDelivered);\n\n  return (\n    <div className=\"order-history-box\">\n      <Helmet>\n        <title>Order History</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\">Order History</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>BUYER</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.filter(isCompleted).map((order) => (\n              <tr key={order._id}>\n                  <td>#{order._id}</td>\n                  <td>{order.user ? order.user.name : 'DELETED'}</td>\n                  <td>${order.totalPrice.toFixed(2)}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                  <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'}</td>\n                  <td>\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/order/${order._id}`);\n                    }}>Details\n                    </Button>\n                  </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/VerificationScreen.js",["218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n    case 'UPLOAD_REQUEST':\n      return { ...state, loadingUpload: true, errorUpload: '' };\n    case 'UPLOAD_SUCCESS':\n      return { ...state, loadingUpload: false, errorUpload: '' };\n    case 'UPLOAD_FAIL':\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function VerificationScreen() {\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const { id: productId } = params;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const [name, setName] = useState(userInfo.name);\n  const [shop, setShop] = useState(userInfo.shop);\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n    try {\n      dispatch({type:'UPLOAD_REQUEST'});\n      const { data } = await axios.post('/api/upload', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({type: 'UPLOAD_SUCCESS'});\n      toast.success('Image Uploaded Successfully');\n      setImage(data.secure_url);\n    } catch(err) {\n      toast.error(getError(err));\n      dispatch({type: 'UPLOAD_FAIL', payload: getError(err)});\n\n    }\n  }\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          handmade: true\n        },\n        {\n          headers: {Authorization: `Bearer ${userInfo.token}`},\n        }\n      );\n      dispatch({type: 'UPDATE_SUCCESS'});\n      toast.success('Verification Successful!');\n    } catch(err) {\n      dispatch({type: 'FETCH_FAIL'});\n      toast.error(getError(err));\n    }\n  };\n\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Verification</title>\n      </Helmet>\n      <h1>Verification - Apply for \"Handmaker\" Status</h1>\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"shop\">\n            <Form.Label>Shop</Form.Label>\n            <Form.Control\n              value={shop}\n              required disabled\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId = \"imageFile\">\n            <Form.Label>Upload Image Of Your Process</Form.Label>\n            <Form.Control type=\"file\" onChange={uploadFileHandler} />\n            {loadingUpload && <LoadingBox />}\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <div className=\"mb-3\">\n            <Button disabled={loadingUpdate} type=\"submit\">\n              Apply\n            </Button>\n            {loadingUpdate && <LoadingBox></LoadingBox>}\n          </div>\n        </Form>\n    </Container>\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Seller.js",["230","231","232","233","234","235"],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Seller(props) {\n  const { seller } = props;\n\n  return (\n    <Card className=\"user-card\">\n      <Card.Body className=\"text-center\">\n        <Link to={`/seller/${seller.shop}`}>\n          <Card.Title className=\"mb-3\"><strong>{seller.shop}</strong></Card.Title>\n        </Link>\n        <img src={seller.logo} className=\"seller-logo\"/>\n\n        <Card.Text className=\"mt-3\">\n        <strong> About {seller.shop}: </strong>\n        <br/>\n          {seller.description}\n        </Card.Text>\n        <hr/>\n        {seller.handmade === true ? (\n          <i className=\"fas fa-star star\"><h4>Verified Handmade!</h4></i>\n        ) : (\n          <h5>No Badges Yet...</h5>\n        )}\n        <hr/>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Seller;\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProductRequestScreen.js",["236","237","238"],"import React, { useReducer, useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreate: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreate: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreate: false };\n    case 'DELETE_REQUEST':\n      return { ...state, loadingDelete: true, successDelete: false };\n    case 'DELETE_SUCCESS':\n      return { ...state, loadingDelete: false, successDelete: true };\n    case 'DELETE_FAIL':\n      return { ...state, loadingDelete: false, successDelete: false };\n    case 'DELETE_RESET':\n      return { ...state, loadingDelete: false, successDelete: false };\n    default:\n      return state;\n  }\n};\n\nexport default function ProductRequestScreen() {\n  const [{ loading, error, products, loadingCreate, loadingDelete, successDelete }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const sp = new URLSearchParams(search);\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  const isBuyer = (product) => (product.user === userInfo._id);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/request`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {}\n    };\n    if (successDelete) {\n      dispatch({type: 'DELETE_RESET'});\n    } else {\n      fetchData();\n    }\n  }, [userInfo, successDelete]);\n\n  const createHandler = async () => {\n    if (window.confirm(\"Confirm Creation\")) {\n\n      try {\n        dispatch({type: 'CREATE_REQUEST'});\n        const { data } = await axios.post(\n          '/api/products/request',\n          {},\n          {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n          }\n        );\n        toast.success('Request Listed Successfully!');\n        dispatch({type: 'CREATE_SUCCESS'});\n        navigate(`/buyer/request/${data.product._id}`);\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'CREATE_FAIL'});\n      }\n    }\n  }\n\n  const deleteHandler = async (product) => {\n    if (window.confirm(\"Confirm deletion\")) {\n      try {\n        await axios.delete(`/api/products/request/${product._id}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        toast.success(\"Request deleted\");\n        dispatch({type: 'DELETE_SUCCESS'});\n      } catch(err) {\n        toast.error(getError(err));\n        dispatch({type: 'DELETE_FAIL'});\n      }\n    }\n  }\n\n  return (\n    <div className=\"order-history-box\">\n    <Row>\n      <Col>\n        <h1>Requests</h1>\n      </Col>\n      <Col className=\"col text-end\">\n        <div>\n          <Button type=\"button\" onClick={createHandler}>List Request</Button>\n        </div>\n      </Col>\n    </Row>\n    {loadingCreate && <LoadingBox />}\n    {loadingDelete && <LoadingBox />}\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>TITLE</th>\n                <th>BUDGET</th>\n                <th>ACTIONS</th>\n                <th>CRAFTER</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.filter(isBuyer).map((product) => (\n                <tr key={product._id}>\n                  <td>#{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>\n                    <Button type=\"button\" variant=\"light\" onClick={() => navigate(`/buyer/request/${product._id}`)}>\n                      Edit\n                    </Button>\n                    &nbsp;\n                    <Button type=\"button\" variant=\"light\" onClick={() => deleteHandler(product)}>\n                      Delete\n                    </Button>\n                    <Button type=\"button\" variant=\"light\" onClick={() => {\n                      navigate(`/buyer/request/page/${product._id}`);\n                    }}>Details\n                    </Button>\n                  </td>\n                  <td>{product.applicant ? product.applicant.shop.toUpperCase() : 'NONE'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestEditScreen.js",[],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/Request.js",["239","240","241"],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Request(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/request/${item._id}`);\n    if (data.stock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card className=\"product-card\" style={{border: \"1px solid grey\"}}>\n      <Link to={`/buyer/request/page/${product._id}`}>\n        <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      </Link>\n      <Card.Body>\n        <Row>\n          <Link to={`/buyer/request/page/${product._id}`}>\n            <Card.Title>{product.name}</Card.Title>\n          </Link>\n        </Row>\n        <Row>\n          <Rating rating={product.rating} numReviews={product.numReviews} />\n        </Row>\n        <Row>\n          <Card.Text>Budget: ${product.price}</Card.Text>\n        </Row>\n        <Row>\n          <Card.Text>Require Amount: {product.stock}</Card.Text>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Request;\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestsPageScreen.js",["242","243","244","245","246"],"import { useEffect, useReducer, useState, useContext } from 'react';\nimport axios from 'axios';\nimport logger from 'use-reducer-logger';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Request from '../components/Request';\nimport Seller from '../components/Seller';\nimport Card from 'react-bootstrap/Card';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function RequestsPageScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: '',\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    fetchData();\n  }, []);\n\n  const isRequest = (product) => (product.type === \"request\");\n\n  return (\n    <div>\n      <Helmet>\n        <title>Product/Services Requests</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\">Product/Services Requests</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {products.filter(isRequest).map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Request product={product}></Request>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestPostScreen.js",["247","248","249","250","251","252"],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SellerScreen.js",["253","254","255","256","257","258","259","260"],"import axios from 'axios';\nimport React, {useReducer, useEffect, useContext, useState} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Product from '../components/Product';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { toast } from 'react-toastify';\nimport Rating from '../components/Rating';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, user: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function SellerScreen() {\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n\n  const params = useParams();\n  const { shop } = params;\n\n  const [{ loading, error, products, user }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: '',\n    user: [],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    const fetchUser = async () => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get(\n          `/api/users/${shop}`,\n        );\n        dispatch({type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({type: 'FETCHUSER_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n    fetchData();\n    fetchUser();\n  }, [shop]);\n  const isShop = (product) => (product.shop === user.shop);\n  const hasRating = (product) => (product.numReviews > 0);\n  const sumRating = products.filter(isShop).map((product) => product.rating).reduce((a, c) => a+c, 0);\n  const avgRating = sumRating/products.filter(isShop).filter(hasRating).length;\n\n  const sumReviews = products.filter(isShop).map((product) => product.numReviews).reduce((a,c) => a+c, 0);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Shop</title>\n      </Helmet>\n      <h1>{user.shop}'s Shop</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n          <Col lg={3} md={4} sm={12} className=\"me-5\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"mb-3\"><strong>{user.shop}</strong></Card.Title>\n                <img src={user.logo} className=\"seller-logo\"/>\n\n                <Card.Text className=\"mt-3\">\n                <strong> About {user.shop}: </strong>\n                <br/>\n                  {user.description}\n                </Card.Text>\n                <hr/>\n                {user.handmade === true ? (\n                  <i className=\"fas fa-star star\"><h4>Verified Handmade!</h4></i>\n                ) : (\n                  <h5>No Badges Yet...</h5>\n                )}\n                <hr/>\n                <Card.Text>\n                  <Rating numReviews={sumReviews} rating={avgRating}/>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              {products.filter(isShop).map((product) => (\n                <Col key={product.slug} sm={12} md={6} lg={4} className=\"mb-3\">\n                  <Product product={product}></Product>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/BuyerScreen.js",["261","262","263","264","265","266","267","268"],"import axios from 'axios';\nimport React, {useReducer, useEffect, useContext, useState} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Request from '../components/Request';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { toast } from 'react-toastify';\nimport Rating from '../components/Rating';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'FETCHUSER_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCHUSER_SUCCESS':\n      return { ...state, user: action.payload, loading: false };\n    case 'FETCHUSER_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function BuyerScreen() {\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n\n  const params = useParams();\n  const { id } = params;\n\n  const [{ loading, error, products, user }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: '',\n    user: [],\n  });\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n    };\n    const fetchUser = async () => {\n      dispatch({type: 'FETCHUSER_REQUEST'});\n      try {\n        const user = await axios.get(\n          `/api/users/buyer/${id}`,\n        );\n        dispatch({type: 'FETCHUSER_SUCCESS', payload: user.data});\n      } catch(err) {\n        dispatch({type: 'FETCHUSER_FAIL'});\n        toast.error(getError(err));\n      }\n    }\n    fetchData();\n    fetchUser();\n  }, [id]);\n\n  const isUser = (product) => (product.user === user._id);\n  const hasRating = (product) => (product.numReviews > 0);\n  const sumRating = products.filter(isUser).map((product) => product.rating).reduce((a, c) => a+c, 0);\n  const avgRating = sumRating/products.filter(isUser).filter(hasRating).length;\n\n  const sumReviews = products.filter(isUser).map((product) => product.numReviews).reduce((a,c) => a+c, 0);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Profile Page</title>\n      </Helmet>\n      <h1>{user.name}'s Profile Page</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n          <Col lg={3} md={4} sm={12} className=\"me-5\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"mb-3\"><strong>{user.name}</strong></Card.Title>\n                <img src={user.logo} className=\"seller-logo\"/>\n\n                <Card.Text className=\"mt-3\">\n                <strong> About {user.name}: </strong>\n                <br/>\n                  {user.description}\n                </Card.Text>\n                <hr/>\n                <Card.Text>\n                  <Rating numReviews={sumReviews} rating={avgRating}/>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              {products.filter(isUser).map((product) => (\n                <Col key={product._id} sm={12} md={6} lg={4} className=\"mb-3\">\n                  <Request product={product}></Request>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/RequestsPageSellerScreen.js",["269","270","271","272","273"],"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/components/ProductSeller.js",["274","275"],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport Badge from 'react-bootstrap/Badge';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction ProductSeller(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${item._id}`);\n    if (data.stock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card style={{border: \"1px solid grey\"}}>\n      <Link to={`/product/${product.slug}`}>\n        <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product.slug}`}>\n          <Card.Title>{product.name}</Card.Title>\n        </Link>\n        <Rating rating={product.rating} numReviews={product.numReviews} />\n        <Card.Text><h5>Price: <strong>${product.price}</strong></h5></Card.Text>\n        <Card.Text><h5>Sales: <strong>{product.sales}</strong></h5></Card.Text>\n        <Card.Text><h5>Stock: <strong>{product.stock}</strong></h5></Card.Text>\n      </Card.Body>\n      {product.stock < 5 ? (\n        <Badge bg=\"warning\">Low Stock</Badge>\n      ) : product.stock === 0 ? (\n        <Badge bg=\"danger\">Out of Stock</Badge>\n      ) : (\n        <Badge bg=\"success\">In Stock</Badge>\n      )}\n    </Card>\n  );\n}\nexport default ProductSeller;\n",{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":1,"column":33,"nodeType":"282","messageId":"283","endLine":1,"endColumn":41},{"ruleId":"280","severity":1,"message":"284","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":12},{"ruleId":"280","severity":1,"message":"285","line":37,"column":28,"nodeType":"282","messageId":"283","endLine":37,"endColumn":39},{"ruleId":"280","severity":1,"message":"286","line":38,"column":11,"nodeType":"282","messageId":"283","endLine":38,"endColumn":19},{"ruleId":"280","severity":1,"message":"287","line":20,"column":16,"nodeType":"282","messageId":"283","endLine":20,"endColumn":23},{"ruleId":"280","severity":1,"message":"288","line":21,"column":16,"nodeType":"282","messageId":"283","endLine":21,"endColumn":23},{"ruleId":"280","severity":1,"message":"289","line":22,"column":16,"nodeType":"282","messageId":"283","endLine":22,"endColumn":23},{"ruleId":"280","severity":1,"message":"290","line":23,"column":23,"nodeType":"282","messageId":"283","endLine":23,"endColumn":37},{"ruleId":"280","severity":1,"message":"291","line":24,"column":20,"nodeType":"282","messageId":"283","endLine":24,"endColumn":31},{"ruleId":"292","severity":1,"message":"293","line":43,"column":21,"nodeType":"294","messageId":"295","endLine":43,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":41,"column":21,"nodeType":"294","messageId":"295","endLine":41,"endColumn":23},{"ruleId":"280","severity":1,"message":"296","line":2,"column":29,"nodeType":"282","messageId":"283","endLine":2,"endColumn":38},{"ruleId":"280","severity":1,"message":"281","line":2,"column":52,"nodeType":"282","messageId":"283","endLine":2,"endColumn":60},{"ruleId":"280","severity":1,"message":"297","line":3,"column":29,"nodeType":"282","messageId":"283","endLine":3,"endColumn":38},{"ruleId":"280","severity":1,"message":"298","line":11,"column":8,"nodeType":"282","messageId":"283","endLine":11,"endColumn":12},{"ruleId":"280","severity":1,"message":"299","line":94,"column":15,"nodeType":"282","messageId":"283","endLine":94,"endColumn":19},{"ruleId":"280","severity":1,"message":"299","line":108,"column":15,"nodeType":"282","messageId":"283","endLine":108,"endColumn":19},{"ruleId":"280","severity":1,"message":"300","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":18},{"ruleId":"280","severity":1,"message":"291","line":48,"column":20,"nodeType":"282","messageId":"283","endLine":48,"endColumn":31},{"ruleId":"280","severity":1,"message":"301","line":49,"column":17,"nodeType":"282","messageId":"283","endLine":49,"endColumn":25},{"ruleId":"280","severity":1,"message":"302","line":51,"column":12,"nodeType":"282","messageId":"283","endLine":51,"endColumn":25},{"ruleId":"303","severity":1,"message":"304","line":72,"column":6,"nodeType":"305","endLine":72,"endColumn":8,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":134,"column":9,"nodeType":"309","endLine":137,"endColumn":10},{"ruleId":"310","severity":1,"message":"311","line":20,"column":124,"nodeType":"312","endLine":20,"endColumn":152},{"ruleId":"280","severity":1,"message":"313","line":3,"column":8,"nodeType":"282","messageId":"283","endLine":3,"endColumn":13},{"ruleId":"280","severity":1,"message":"314","line":70,"column":11,"nodeType":"282","messageId":"283","endLine":70,"endColumn":20},{"ruleId":"280","severity":1,"message":"315","line":72,"column":11,"nodeType":"282","messageId":"283","endLine":72,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":48},{"ruleId":"280","severity":1,"message":"316","line":3,"column":23,"nodeType":"282","messageId":"283","endLine":3,"endColumn":27},{"ruleId":"280","severity":1,"message":"317","line":52,"column":9,"nodeType":"282","messageId":"283","endLine":52,"endColumn":11},{"ruleId":"280","severity":1,"message":"318","line":3,"column":8,"nodeType":"282","messageId":"283","endLine":3,"endColumn":21},{"ruleId":"280","severity":1,"message":"297","line":6,"column":23,"nodeType":"282","messageId":"283","endLine":6,"endColumn":32},{"ruleId":"280","severity":1,"message":"296","line":1,"column":29,"nodeType":"282","messageId":"283","endLine":1,"endColumn":38},{"ruleId":"280","severity":1,"message":"300","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":18},{"ruleId":"280","severity":1,"message":"319","line":42,"column":9,"nodeType":"282","messageId":"283","endLine":42,"endColumn":17},{"ruleId":"280","severity":1,"message":"320","line":44,"column":15,"nodeType":"282","messageId":"283","endLine":44,"endColumn":24},{"ruleId":"280","severity":1,"message":"285","line":46,"column":28,"nodeType":"282","messageId":"283","endLine":46,"endColumn":39},{"ruleId":"280","severity":1,"message":"321","line":48,"column":12,"nodeType":"282","messageId":"283","endLine":48,"endColumn":19},{"ruleId":"280","severity":1,"message":"322","line":48,"column":21,"nodeType":"282","messageId":"283","endLine":48,"endColumn":26},{"ruleId":"280","severity":1,"message":"323","line":53,"column":10,"nodeType":"282","messageId":"283","endLine":53,"endColumn":14},{"ruleId":"280","severity":1,"message":"287","line":53,"column":16,"nodeType":"282","messageId":"283","endLine":53,"endColumn":23},{"ruleId":"280","severity":1,"message":"288","line":54,"column":16,"nodeType":"282","messageId":"283","endLine":54,"endColumn":23},{"ruleId":"280","severity":1,"message":"324","line":55,"column":10,"nodeType":"282","messageId":"283","endLine":55,"endColumn":15},{"ruleId":"280","severity":1,"message":"299","line":83,"column":15,"nodeType":"282","messageId":"283","endLine":83,"endColumn":19},{"ruleId":"280","severity":1,"message":"325","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"326","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":14},{"ruleId":"280","severity":1,"message":"327","line":5,"column":8,"nodeType":"282","messageId":"283","endLine":5,"endColumn":13},{"ruleId":"280","severity":1,"message":"328","line":6,"column":10,"nodeType":"282","messageId":"283","endLine":6,"endColumn":20},{"ruleId":"280","severity":1,"message":"329","line":7,"column":10,"nodeType":"282","messageId":"283","endLine":7,"endColumn":15},{"ruleId":"307","severity":1,"message":"308","line":18,"column":9,"nodeType":"309","endLine":18,"endColumn":57},{"ruleId":"280","severity":1,"message":"281","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":48},{"ruleId":"280","severity":1,"message":"316","line":3,"column":23,"nodeType":"282","messageId":"283","endLine":3,"endColumn":27},{"ruleId":"280","severity":1,"message":"317","line":52,"column":9,"nodeType":"282","messageId":"283","endLine":52,"endColumn":11},{"ruleId":"280","severity":1,"message":"325","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"330","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":11},{"ruleId":"280","severity":1,"message":"331","line":19,"column":9,"nodeType":"282","messageId":"283","endLine":19,"endColumn":25},{"ruleId":"280","severity":1,"message":"281","line":1,"column":33,"nodeType":"282","messageId":"283","endLine":1,"endColumn":41},{"ruleId":"280","severity":1,"message":"332","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":14},{"ruleId":"280","severity":1,"message":"284","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":12},{"ruleId":"280","severity":1,"message":"285","line":28,"column":28,"nodeType":"282","messageId":"283","endLine":28,"endColumn":39},{"ruleId":"280","severity":1,"message":"286","line":29,"column":11,"nodeType":"282","messageId":"283","endLine":29,"endColumn":19},{"ruleId":"280","severity":1,"message":"333","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":13},{"ruleId":"280","severity":1,"message":"319","line":52,"column":9,"nodeType":"282","messageId":"283","endLine":52,"endColumn":17},{"ruleId":"280","severity":1,"message":"285","line":79,"column":28,"nodeType":"282","messageId":"283","endLine":79,"endColumn":39},{"ruleId":"280","severity":1,"message":"334","line":80,"column":11,"nodeType":"282","messageId":"283","endLine":80,"endColumn":15},{"ruleId":"280","severity":1,"message":"299","line":85,"column":15,"nodeType":"282","messageId":"283","endLine":85,"endColumn":19},{"ruleId":"292","severity":1,"message":"335","line":191,"column":67,"nodeType":"294","messageId":"295","endLine":191,"endColumn":69},{"ruleId":"280","severity":1,"message":"281","line":2,"column":51,"nodeType":"282","messageId":"283","endLine":2,"endColumn":59},{"ruleId":"280","severity":1,"message":"336","line":8,"column":10,"nodeType":"282","messageId":"283","endLine":8,"endColumn":21},{"ruleId":"280","severity":1,"message":"316","line":8,"column":34,"nodeType":"282","messageId":"283","endLine":8,"endColumn":38},{"ruleId":"280","severity":1,"message":"325","line":12,"column":8,"nodeType":"282","messageId":"283","endLine":12,"endColumn":14},{"ruleId":"280","severity":1,"message":"337","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":17},{"ruleId":"280","severity":1,"message":"285","line":39,"column":28,"nodeType":"282","messageId":"283","endLine":39,"endColumn":39},{"ruleId":"280","severity":1,"message":"286","line":40,"column":11,"nodeType":"282","messageId":"283","endLine":40,"endColumn":19},{"ruleId":"307","severity":1,"message":"308","line":101,"column":17,"nodeType":"309","endLine":101,"endColumn":63},{"ruleId":"280","severity":1,"message":"281","line":2,"column":51,"nodeType":"282","messageId":"283","endLine":2,"endColumn":59},{"ruleId":"280","severity":1,"message":"336","line":8,"column":10,"nodeType":"282","messageId":"283","endLine":8,"endColumn":21},{"ruleId":"280","severity":1,"message":"316","line":8,"column":34,"nodeType":"282","messageId":"283","endLine":8,"endColumn":38},{"ruleId":"280","severity":1,"message":"325","line":12,"column":8,"nodeType":"282","messageId":"283","endLine":12,"endColumn":14},{"ruleId":"280","severity":1,"message":"337","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":17},{"ruleId":"280","severity":1,"message":"285","line":39,"column":28,"nodeType":"282","messageId":"283","endLine":39,"endColumn":39},{"ruleId":"280","severity":1,"message":"286","line":40,"column":11,"nodeType":"282","messageId":"283","endLine":40,"endColumn":19},{"ruleId":"307","severity":1,"message":"308","line":103,"column":17,"nodeType":"309","endLine":103,"endColumn":63},{"ruleId":"280","severity":1,"message":"281","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":48},{"ruleId":"280","severity":1,"message":"316","line":3,"column":23,"nodeType":"282","messageId":"283","endLine":3,"endColumn":27},{"ruleId":"280","severity":1,"message":"338","line":5,"column":10,"nodeType":"282","messageId":"283","endLine":5,"endColumn":18},{"ruleId":"280","severity":1,"message":"339","line":6,"column":10,"nodeType":"282","messageId":"283","endLine":6,"endColumn":15},{"ruleId":"280","severity":1,"message":"317","line":38,"column":9,"nodeType":"282","messageId":"283","endLine":38,"endColumn":11},{"ruleId":"280","severity":1,"message":"325","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"331","line":18,"column":9,"nodeType":"282","messageId":"283","endLine":18,"endColumn":25},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'ctxDispatch' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setName' is assigned a value but never used.","'setShop' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setHandmade' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Form' is defined but never used.","'data' is assigned a value but never used.","'MessageBox' is defined but never used.","'setMoney' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.","ArrayExpression",["342"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/aria-props","aria-Label: This attribute is an invalid ARIA attribute. Did you mean to use aria-label,aria-level?","JSXAttribute","'Chart' is defined but never used.","'avgRating' is assigned a value but never used.","'sumReviews' is assigned a value but never used.","'Link' is defined but never used.","'sp' is assigned a value but never used.","'LinkContainer' is defined but never used.","'navigate' is assigned a value but never used.","'productId' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'name' is assigned a value but never used.","'image' is assigned a value but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'axios' is defined but never used.","'useContext' is defined but never used.","'Store' is defined but never used.","'Col' is defined but never used.","'addToCartHandler' is assigned a value but never used.","'Seller' is defined but never used.","'Badge' is defined but never used.","'cart' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useNavigate' is defined but never used.","'ListGroup' is defined but never used.","'getError' is defined but never used.","'toast' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},"Update the dependencies array to be: [userInfo.token]",{"range":"345","text":"346"},[2542,2544],"[userInfo.token]"]