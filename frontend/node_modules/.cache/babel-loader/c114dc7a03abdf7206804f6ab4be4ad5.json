{"ast":null,"code":"var _jsxFileName = \"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useReducer, useEffect, useContext } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        order: action.payload,\n        loading: false,\n        error: ''\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function OrderScreen() {\n  _s();\n\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const params = useParams();\n  const {\n    id: orderId\n  } = params;\n  const navigate = useNavigate();\n  const [{\n    loading,\n    error,\n    order\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: ''\n  });\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/orders/${orderId}`, {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    if (!userInfo) {\n      return navigate('/login');\n    }\n\n    if (!order._id || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId, navigate]);\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Order \", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(OrderScreen, \"YBEgBH4S9p5NGMF5sfELvBifOms=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderScreen.js"],"names":["axios","React","useReducer","useEffect","useContext","Helmet","getError","LoadingBox","MessageBox","Store","useNavigate","useParams","reducer","state","action","type","loading","error","order","payload","OrderScreen","userInfo","params","id","orderId","navigate","dispatch","fetchOrder","data","get","headers","authorization","token","err","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useReducer, useEffect, useContext} from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate, useParams } from 'react-router-dom';\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, order: action.payload, loading: false, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default function OrderScreen() {\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const params = useParams();\n  const { id: orderId } = params;\n  const navigate = useNavigate();\n\n  const [{loading, error, order}, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchOrder = async() => {\n      try{\n        dispatch({type:'FETCH_REQUEST'});\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n          headers: {authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({type: 'FETCH_SUCCESS', payload: data });\n      } catch(err) {\n        dispatch({type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    }\n    if (!userInfo) {\n      return navigate('/login');\n    }\n    if (!order._id || (order._id && order._id !== orderId)) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId, navigate]);\n  return  (\n    loading? (\n      <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n      <div>\n        <Helmet>\n          <title>Order {orderId}</title>\n        </Helmet>\n      </div>\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}