{"ast":null,"code":"var _jsxFileName = \"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderHistoryScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getError } from '../utils';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        orders: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function OrderHistoryScreen() {\n  _s();\n\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const navigate = useNavigate();\n  const [{\n    loading,\n    error,\n    orders\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const {\n          data\n        } = await axios.get(`/api/orders/mine`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error)\n        });\n      }\n    };\n\n    fetchData();\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"della-font-headers\",\n      children: \" Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DELIVERED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ACTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isPaid ? order.paidAt.substring(0, 10) : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"light\",\n              onClick: () => {\n                navigate(`/order/${order._id}`);\n              },\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderHistoryScreen, \"tKrwSOSzrNJvuCNH0/nfQ0vIzUM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OrderHistoryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistoryScreen\");","map":{"version":3,"sources":["/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/OrderHistoryScreen.js"],"names":["React","useContext","useEffect","useReducer","Helmet","LoadingBox","MessageBox","Store","useNavigate","axios","getError","Button","reducer","state","action","type","loading","orders","payload","error","OrderHistoryScreen","userInfo","navigate","dispatch","fetchData","data","get","headers","Authorization","token","map","order","_id","createdAt","substring","totalPrice","toFixed","isPaid","paidAt","isDelivered","deliveredAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,MAAM,EAAEH,MAAM,CAACI,OAA3B;AAAoCF,QAAAA,OAAO,EAAE;AAA7C,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAA1C,OAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAe,SAASO,kBAAT,GAA8B;AAAA;;AAE3C,QAAM;AAAEP,IAAAA;AAAF,MAAYZ,UAAU,CAACM,KAAD,CAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeR,KAArB;AACA,QAAMS,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAM,CAAC;AAACQ,IAAAA,OAAD;AAAUG,IAAAA,KAAV;AAAiBF,IAAAA;AAAjB,GAAD,EAA2BM,QAA3B,IAAuCpB,UAAU,CAACS,OAAD,EAAU;AAC/DI,IAAAA,OAAO,EAAE,IADsD;AAE/DG,IAAAA,KAAK,EAAE;AAFwD,GAAV,CAAvD;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,SAAS,GAAG,YAAW;AAC3BD,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;;AACA,UAAI;AACF,cAAM;AAACU,UAAAA;AAAD,YAAS,MAAMhB,KAAK,CAACiB,GAAN,CAClB,kBADkB,EAEnB;AAACC,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAG,UAASP,QAAQ,CAACQ,KAAM;AAAzC;AAAV,SAFmB,CAArB;AAIAN,QAAAA,QAAQ,CAAC;AAACR,UAAAA,IAAI,EAAE,eAAP;AAAwBG,UAAAA,OAAO,EAAEO;AAAjC,SAAD,CAAR;AACD,OAND,CAME,OAAMN,KAAN,EAAa;AACbI,QAAAA,QAAQ,CAAC;AACPR,UAAAA,IAAI,EAAE,YADC;AAEPG,UAAAA,OAAO,EAAER,QAAQ,CAACS,KAAD;AAFV,SAAD,CAAR;AAID;AACF,KAdD;;AAeAK,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACH,QAAD,CAjBM,CAAT;AAmBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGL,OAAO,gBACN,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAEJG,KAAK,gBACP,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBACGF,MAAM,CAACa,GAAP,CAAYC,KAAD,iBACV;AAAA,kCACE;AAAA,sBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,KAAK,CAACE,SAAN,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,KAAK,CAACI,UAAN,CAAiBC,OAAjB,CAAyB,CAAzB;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKL,KAAK,CAACM,MAAN,GAAeN,KAAK,CAACO,MAAN,CAAaJ,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,CAAf,GAA+C;AAApD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBAAKH,KAAK,CAACQ,WAAN,GAAoBR,KAAK,CAACS,WAAN,CAAkBN,SAAlB,CAA4B,CAA5B,EAA+B,EAA/B,CAApB,GAAyD;AAA9D;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAC,OAA9B;AAAsC,cAAA,OAAO,EAAE,MAAM;AACnDZ,gBAAAA,QAAQ,CAAE,UAASS,KAAK,CAACC,GAAI,EAArB,CAAR;AACD,eAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAASD,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAzEuBZ,kB;UAILZ,W;;;KAJKY,kB","sourcesContent":["import React, {useContext, useEffect, useReducer } from 'react';\nimport {Helmet} from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getError } from '../utils';\nimport Button from 'react-bootstrap/Button';\n\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, orders: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function OrderHistoryScreen() {\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n\n  const [{loading, error, orders}, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async() => {\n      dispatch({type: 'FETCH_REQUEST'});\n      try {\n        const {data} = await axios.get(\n          `/api/orders/mine`,\n          {headers: {Authorization: `Bearer ${userInfo.token}`}}\n        );\n        dispatch({type: 'FETCH_SUCCESS', payload: data});\n      } catch(error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error),\n        });\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Order History</title>\n      </Helmet>\n      <h1 className=\"della-font-headers\"> Order History</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice.toFixed(2)}</td>\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'}</td>\n                <td>\n                  <Button type=\"button\" variant=\"light\" onClick={() => {\n                    navigate(`/order/${order._id}`);\n                  }}>Details\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}