{"ast":null,"code":"var _jsxFileName = \"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SigninScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport Axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigninScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n\n  const togglePassword = () => {\n    function show() {\n      var p = document.getElementById('pwd');\n      p.setAttribute('type', 'text');\n    }\n\n    function hide() {\n      var p = document.getElementById('pwd');\n      p.setAttribute('type', 'password');\n    }\n\n    var pwShown = 0;\n    document.getElementById(\"eye\").addEventListener(\"click\", function () {\n      if (pwShown == 0) {\n        pwShown = 1;\n        show();\n      } else {\n        pwShown = 0;\n        hide();\n      }\n    }, false);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await Axios.post('/api/users/signin', {\n        email,\n        password\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3 della-font-headers\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), '  ', /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          type: \"button\",\n          id: \"eye\",\n          onClick: () => togglePassword()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [\"New customer?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: `/register?redirect=${redirect}`,\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SigninScreen, \"ZeiMoCANOGQWtX0r6v9ILs/Wt4E=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"sources":["/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/SigninScreen.js"],"names":["Link","useLocation","useNavigate","Container","Form","Button","Helmet","Axios","useState","useContext","useEffect","Store","toast","getError","SigninScreen","navigate","search","redirectInUrl","URLSearchParams","get","redirect","email","setEmail","password","setPassword","state","dispatch","ctxDispatch","userInfo","togglePassword","show","p","document","getElementById","setAttribute","hide","pwShown","addEventListener","submitHandler","e","preventDefault","data","post","type","payload","localStorage","setItem","JSON","stringify","err","error","target","value"],"mappings":"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","sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport Axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function SigninScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const {state, dispatch: ctxDispatch } = useContext(Store);\n  const {userInfo} = state;\n\n  const togglePassword = () => {\n    function show() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'text');\n    }\n\n    function hide() {\n        var p = document.getElementById('pwd');\n        p.setAttribute('type', 'password');\n    }\n\n    var pwShown = 0;\n\n    document.getElementById(\"eye\").addEventListener(\"click\", function () {\n        if (pwShown == 0) {\n            pwShown = 1;\n            show();\n        } else {\n            pwShown = 0;\n            hide();\n        }\n    }, false);\n  }\n\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    try{\n      const {data} = await Axios.post('/api/users/signin', {\n        email,\n        password\n      });\n      ctxDispatch({type: 'USER_SIGNIN', payload: data})\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n\n    } catch(err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-3 della-font-headers\">Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>{'  '}\n          <i class=\"fa fa-eye\" aria-hidden=\"true\" type=\"button\" id=\"eye\" onClick={() => togglePassword()}></i>\n          <Form.Control type=\"password\" required onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign In</Button>\n        </div>\n        <div className=\"mb-3\">\n          New customer?{' '}\n          <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}