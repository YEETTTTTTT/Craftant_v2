{"ast":null,"code":"var _jsxFileName = \"/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useReducer } from 'react';\nimport { Store } from '../Store';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/profile', {\n        name,\n        email,\n        password\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully!');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL'\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3 della-font-headers\",\n      children: [\"User Profile - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        id: \"user-role-color\",\n        children: [\" \", userInfo.userRole]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"1/bfS0fp+utc6WVjY8qXaqPI/f0=\");\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/yilinxia/Downloads/react_tutorial_2/frontend/src/screens/ProfileScreen.js"],"names":["React","useContext","useState","useReducer","Store","Helmet","Form","Button","toast","getError","axios","reducer","state","action","type","loadingUpdate","ProfileScreen","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","put","headers","Authorization","token","payload","localStorage","setItem","JSON","stringify","success","err","error","userRole","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useReducer } from 'react';\nimport { Store } from '../Store';\nimport {Helmet} from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\n\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n    default:\n      return state;\n  }\n}\n\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          name, email, password,\n        },\n        {\n          headers: {Authorization: `Bearer ${userInfo.token}`},\n        }\n      );\n      dispatch({type: 'UPDATE_SUCCESS'});\n      ctxDispatch({type: 'USER_SIGNIN', payload: data});\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully!');\n    } catch(err) {\n      dispatch({type: 'FETCH_FAIL'});\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3 della-font-headers\">User Profile - <strong id=\"user-role-color\"> {userInfo.userRole}</strong></h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control value={name} onChange={(e) => setName(e.target.value)} required/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" onChange={(e) => setPassword(e.target.value)} required/>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)} required/>\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update Details</Button>\n        </div>\n\n      </Form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}